{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "OptimizelyCmsSchema",
  "description": "Optimizely CMS Json Schema",
  "type": "object",
  "properties": {
    "EPiServer": {
      "type": "object",
      "properties": {
        "Cms": {
          "type": "object",
          "properties": {
            "Activity": {
              "description": "Contains various options that can be used to configure how activities should be handled within CMS",
              "type": "object",
              "properties": {
                "ArchiveRetentionPeriod": {
                  "type": "integer",
                  "title": "Gets or sets the number of months that activities should remain archived before they are deleted.",
                  "description": "The default value is 12 months. A value of zero (0) indicates that activities should be deleted immediately. A negative value indicates that the archive should be kept indefinitely (not recommended).",
                  "default": 12
                },
                "TrackContentSaveEvents": {
                  "type": "boolean",
                  "description": "Gets or sets if Content Save events should be tracked and logged as an activity.",
                  "default": false
                },
                "TruncateDatabaseTimeout": {
                  "type": "string",
                  "format": "duration",
                  "description": "Optional timeout that can be set for truncate database operations. If not set the default database timeout is used."
                },
                "TruncateMaximum": {
                  "type": "integer",
                  "description": "The maximum number of activities that are removed every time the truncate job runs. The default value is 100 000 activities. Consider lowering this if you are experiencing timeouts.",
                  "default": 100000
                }
              }
            },
            "AspNetAntiForgery": {
              "title": "Obsolete. Please use the MVC built-in Antiforgery support",
              "description": "Contains options for anti forgery.",
              "type": "object",
              "deprecated": true,              
              "properties": {
                "CookieRequireSSL": {
                  "type": "boolean",
                  "description": "Indicate the value of the Secure property of the cookie should be assigned."
                },
                "CookieSameSiteType": {
                  "enum": [
                    "None",
                    "Lax",
                    "Strict"
                  ],
                  "description": "Indicate if the value of the SameSite property of the cookie should be assigned."
                },
                "EnableSameOriginCheck": {
                  "type": "boolean",
                  "deprecated": true,
                  "description": "Determines whether EPiServer.Framework.Web.AspNetAntiForgery should check request for same origin or not."
                },
                "SameSiteAttributeValue": {
                  "enum": [
                    "None",
                    "Lax",
                    "Strict"
                  ],
                  "deprecated": true
                }
              }
            },
            "BlobProviders": {
              "description": "Specifies how the blob system should be setup",
              "type": "object",
              "properties": {
                "BlobProviderBuilder": {
                  "title": "This value should must be set through code.",
                  "$comment": "This value cannot be set through appsettings, and should not be exposed in the schema.",
                  "type": "object",
                  "properties": {
                    "Method": {
                      "$ref": "#/$defs/methodInfo"
                    },
                    "Target": {
                      "readOnly": true
                    }
                  },
                  "description": "Blob provider builder."
                },
                "DefaultProvider": {
                  "type": "string",
                  "description": "The name of the default EPiServer.Framework.Blobs.BlobProvider. This provider will be used if no specific provider has been specified."
                },
                "Providers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "List of providers name and type.",
                  "readOnly": true
                }
              }
            },
            "CacheMemoryMonitor": {
              "title": "Options for monitoring and trimming the in-memory cache",
              "description": "Backing the default EPiServer.Framework.Cache.IObjectInstanceCache implementation.",              
              "type": "object",
              "properties": {
                "DefaultPollInterval": {
                  "type": "string",
                  "format": "duration",
                  "title": "The default interval between checks of the memory pressure",
                  "description": "Compacting of the cache happens if high memory pressure is detected. The default interval is used when the the load is below threshold, when the pressure goes above the threshold a shorter interval may be automatically used to keep a closer look on the current memory pressure.",
                  "default": "0:0:30"
                },
                "EnableMonitor": {
                  "type": "boolean",
                  "title": "Determines if the memory pressure should be monitored or not.",
                  "description": "true to enable monitoring; false to disable. The default is true.",
                  "default": true
                },
                "InducedGcInterval": {
                  "type": "string",
                  "format": "duration",
                  "title": "The time to wait for the runtime to perform a Generation 2 Garbage Collection after the cache has been compacted.",
                  "description": "After this time, an Optimized GC will be induced. If still no GC happens, eventually a Forced GC will be induced. The default is Timespan.Zero which is interpreted as never induce GC, leave GC timing to the runtime.",
                  "default": "0:0:0"
                },
                "MaxMemoryPressurePercentage": {
                  "type": "integer",
                  "title": "The application memory pressure (in percent)",
                  "description": "The amount of memory used in relation to the estimated memory available is considered the upper threshold. The application aims to keep memory pressure under this threshold by compacting the cache.",
                  "default": 90
                }
              }
            },
            "ClaimType": {
              "title": "Defines claim types that are synchronized to CMS for a user.",
              "description": "By default claim types defined in System.Security.Claims.ClaimTypes are used.",
              "type": "object",
              "properties": {
                "Email": {
                  "type": "string",
                  "description": "The claim type for email"
                },
                "GivenName": {
                  "type": "string",
                  "description": "The claim type for GivenName"
                },
                "Surname": {
                  "type": "string",
                  "description": "The claim type for Surname"
                }
              }
            },
            "ClientGeolocation": {
              "description": "Contains options for how Geolocation for the client is retrieved.",
              "type": "object",
              "properties": {
                "IPAddressHeader": {
                  "type": "string",
                  "title": "The name of a header that is used to retrieve the IP-address of the client.",
                  "description": "This setting should be used if the site is located behind a proxy server to get the right IP address of the client.",
                  "examples": [
                    "X-Forwarded-For"
                  ]
                },
                "IPAddressHeaderProxyCount": {
                  "type": "integer",
                  "title": "The number of proxy servers in front of the web server listed by IP in the IPAddressHeader. Default value is 1.",
                  "description": "If the proxy count is 3 and the client request contains a header \"X-Forwarded-For\" with the value \"217.114.83.121, 217.114.83.129, 217.114.83.128, 217.114.83.127\", the actual client IP address is assumed to be 217.114.83.129.",
                  "default": 1
                },
                "LocationHeader": {
                  "type": "string",
                  "title": "The name of a header that provides geolocation information in the form of a ISO 3166-1 Alpha-2 country code.",
                  "description": "Header-based geolocation is only used when no Geolocation provider has been configured and that it is limited to Country and Continent locations. This feature is turned on by default for all Optimizely Digital Experience Platform (DXP) customers (using CF-IPCountry as default value).",
                  "examples": [
                    "CF-IPCountry"
                  ]
                }
              }
            },
            "ClientResource": {
              "description": "Specifies options for how client resources should be handled",
              "type": "object",
              "properties": {
                "Compress": {
                  "type": "boolean",
                  "description": "Controls if compression is applied to the rest stores."
                },
                "Debug": {
                  "type": "boolean",
                  "description": "Make sure debug versions of included scripts are used instead of compressed/optimized versions"
                },
                "JsonResponseBuffer": {
                  "type": "integer",
                  "description": "Gets or sets the buffer for how much is buffered before written to response for json outputs"
                }
              }
            },
            "CmsPolicy": {
              "description": "Option that specifies how CMS policies should be configured",
              "type": "object",
              "properties": {
                "AdminRoles": {
                  "$ref": "#/$defs/iListOfString"
                },
                "DefaultShellModuleRoles": {
                  "$ref": "#/$defs/iListOfString"
                },
                "EditRoles": {
                  "$ref": "#/$defs/iListOfString"
                },
                "PreviewRoles": {
                  "$ref": "#/$defs/iListOfString"
                },
                "VisitorGroupAdminRoles": {
                  "$ref": "#/$defs/iListOfString"
                }
              }
            },
            "CompositeFileProvider": {
              "type": "object",
              "properties": {
                "BasePathFileProviders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "BasePath": {
                        "$ref": "#/$defs/string1"
                      }
                    },
                    "readOnly": true
                  },
                  "readOnly": true
                }
              }
            },
            "Content": {
              "description": "Contains various options that can be used to configure how content should be handled within CMS",
              "type": "object",
              "properties": {
                "ContentCacheSlidingExpiration": {
                  "type": "string",
                  "format": "duration",
                  "description": "The sliding cache for how long published content is cached. Set to \u00220:0:0\u0022 to disable."
                },
                "EnableDynamicProperties": {
                  "type": "boolean",
                  "description": "Gets or sets if DynamicProperties should be enabled.",
                  "deprecated": true
                },
                "InMemoryCopyThreshold": {
                  "type": "integer",
                  "description": "Gets or sets the maximum number of content items that will be copied in one operation\r\nusing in process memory. "
                },
                "InvalidateRemoteCacheForVersions": {
                  "type": "boolean",
                  "description": "Defines if changes to content versions should trigger cache invalidation on remote servers."
                },
                "MaximumContentCachedKeys": {
                  "type": "integer",
                  "description": "The maximum number of cache keys that are stored (to avoid repeated string allocations) for content."
                },
                "MaximumContentItemsPerDatabaseRequest": {
                  "type": "integer",
                  "description": "The maximum number of content items that should be returned from a content query\r\nin one database request."
                },
                "MaximumVersions": {
                  "type": "integer",
                  "description": "The maximum number of previously published versions that will be kept."
                },
                "PropertyLazyLoadThreshold": {
                  "type": "integer",
                  "description": "The number of characters when lazy loading should be activated for properties using the \u003Csee cref=\u0022F:EPiServer.Core.PropertyDataType.LongString\u0022 /\u003E data type."
                },
                "Providers": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/$defs/contentProviderBuilder"
                  },
                  "description": "List of content providers that should be used by the system; each represented by a \u003Csee cref=\u0022T:EPiServer.Core.ContentProviderBuilder\u0022 /\u003E instance.",
                  "readOnly": true
                },
                "ProxyType": {
                  "enum": [
                    "Auto",
                    "Castle",
                    "Optimized"
                  ],
                  "description": "Gets or sets the proxy type to be used in content generation."
                },
                "StringCompressionThreshold": {
                  "type": "integer",
                  "description": "Set to the number of characters when compression should be activated ."
                },
                "VersionCacheSlidingExpiration": {
                  "type": "string",
                  "format": "duration",
                  "description": "The sliding cache for how long a content version is cached. Set to \u00220:0:0\u0022 to disable."
                }
              }
            },
            "ContentAreaRendering": {
              "description": "Options for specifying content area rendering settings",
              "type": "object",
              "properties": {
                "TemplateTagSelectionStrategy": {
                  "enum": [
                    "NoTag",
                    "InheritedTag"
                  ],
                  "description": "Specifies which strategy that should be applied when a ContentArea item has a display option specified that does not match any registered template"
                }
              }
            },
            "ContentModel": {
              "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Contains various options that can be used to configure how the content model should be handled during synchronization.",
              "type": "object",
              "properties": {
                "AlwaysUseModelName": {
                  "type": "boolean",
                  "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Specifies if the Model name of the class always should be the name of the content type"
                },
                "EnableModelSyncCommit": {
                  "type": "boolean",
                  "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Set to false to disable the commit phase when synchronizing typed models. Content types will not be updated automatically."
                },
                "EnableSemanticVersioning": {
                  "type": "boolean",
                  "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Set to true to enable semantic versioning of models."
                },
                "IgnoreDataLossValidations": {
                  "type": "boolean",
                  "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. This setting specifies how a type change for a content property should be handled. If set to false then\r\n            property values are loaded and verified if a type change can occur without data loss. If a type change\r\n            can be done without data loss then the type change is applied.\r\n            If set to true then the type conversion is not performed if there exists data, then the type needs to be applied\r\n            manually e.g. from admin mode."
                },
                "WaitForInitializeCompletion": {
                  "type": "boolean",
                  "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Specifies if the model synchronization should wait for the type initialization to be completed."
                }
              }
            },
            "DataAccess": {
              "description": "Specifies options on how to connect to the database.",
              "type": "object",
              "properties": {
                "ConnectionStrings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ConnectionString": {
                        "$ref": "#/$defs/string2"
                      },
                      "Name": {
                        "$ref": "#/$defs/string3"
                      },
                      "ProviderName": {
                        "$ref": "#/$defs/string4"
                      }
                    },
                    "description": "List of connection strings to use.",
                    "readOnly": true
                  },
                  "description": "List of connection strings to use.",
                  "readOnly": true
                },
                "CreateDatabaseSchema": {
                  "type": "boolean",
                  "description": "Defines if the database schema should be created automatically when the system is initialized\r\nand the database is empty."
                },
                "DatabaseMode": {
                  "enum": [
                    "ReadWrite",
                    "ReadOnly"
                  ],
                  "description": "Defines the mode that the database should be working in. "
                },
                "DatabaseQueryTimeout": {
                  "type": "string",
                  "format": "duration",
                  "description": "The timeout used for database queries."
                },
                "DefaultConnectionStringName": {
                  "type": "string",
                  "description": "The name of the default connection string to use."
                },
                "DisableDateTimeKindValidation": {
                  "type": "boolean",
                  "description": "Defines if the datetime kind of the database should be validated to be UTC when the system is initialized.. "
                },
                "Retries": {
                  "type": "integer",
                  "description": "The number of retries in case a deadlock is detected"
                },
                "RetryDelay": {
                  "type": "string",
                  "format": "duration",
                  "description": "The delay between retries in case a deadlock is detected."
                },
                "UpdateDatabaseSchema": {
                  "type": "boolean",
                  "description": "Defines if the database schema should be updated automatically when the system is initialized\r\nin case the schema has changed."
                }
              }
            },
            "Display": {
              "description": "Service that is used to register \u003Csee cref=\u0022T:EPiServer.Web.DisplayOption\u0022 /\u003Es",
              "type": "array",
              "items": {
                "description": "A Display option can be used to register different display options on a content inside a content area",
                "type": "object",
                "properties": {
                  "Description": {
                    "type": "string",
                    "description": "Description for the display option"
                  },
                  "IconClass": {
                    "type": "string",
                    "description": "Css class for the icon that is used in the display option selector"
                  },
                  "Id": {
                    "type": "string",
                    "description": "Unique id for this option"
                  },
                  "IsReadOnly": {
                    "type": "boolean",
                    "description": "Indicates whether the current object instance is read-only."
                  },
                  "Name": {
                    "type": "string",
                    "description": "The name of the display option"
                  },
                  "Tag": {
                    "type": "string",
                    "description": "The rendering tag to apply when the option has been selected"
                  }
                }
              }
            },
            "DynamicDataStore": {
              "description": "Specifies options on how the Dynamic Data Store should operate.",
              "type": "object",
              "properties": {
                "AutoRemapStores": {
                  "type": "boolean",
                  "description": "Indicates if stores should be automatically remapped when a type definition changes."
                },
                "AutoResolveTypes": {
                  "type": "boolean",
                  "description": "Indicates if automatic type resolution should be attempted by the Dynamic Data Store."
                },
                "DeleteAllOperationTimeout": {
                  "type": "string",
                  "format": "duration",
                  "description": "The extended command timeout to use when deleting all items in a store."
                },
                "SeamlessUpgradeStores": {
                  "type": "boolean",
                  "description": "Indicates if the seamless upgrade mode is enabled. If enabled, \u003Csee cref=\u0022T:EPiServer.Data.Dynamic.StoreDefinition\u0022 /\u003E changes will be enforced\r\nin a way that has backward compatible with the previous \u003Csee cref=\u0022T:EPiServer.Data.Dynamic.StoreDefinition\u0022 /\u003E version."
                }
              }
            },
            "Environment": {
              "description": "Specifies environment options for APIs not depending on ASP.NET Core",
              "type": "object",
              "properties": {
                "AppDataPath": {
                  "type": "string",
                  "description": "Gets or sets the absolute path to the directory that contains the private data files."
                },
                "BasePath": {
                  "type": "string",
                  "deprecated": true
                }
              }
            },
            "EventProvider": {
              "description": "Contains configuration options for the remote event system",
              "type": "object",
              "properties": {
                "EventProviderBuilder": {
                  "type": "object",
                  "properties": {
                    "Method": {
                      "$ref": "#/$defs/methodInfo"
                    },
                    "Target": {
                      "readOnly": true
                    }
                  },
                  "description": "Event provider builder."
                },
                "Provider": {
                  "type": "string",
                  "description": "The provider that should be used to send and recieve remote events."
                }
              }
            },
            "ExternalApplication": {
              "description": "Contains option that can be used to configure CMS when there is an external delivery application.\r\nThis option is used by external application like ContentDeliveryApi and CmsUI",
              "type": "object",
              "properties": {
                "OptimizeForDelivery": {
                  "type": "boolean",
                  "description": "Defines whether ContentDeliveryApi and/or CmsUI should be optimized for delivery"
                }
              }
            },
            "FileBlobProvider": {
              "description": "Options for configuring a \u003Csee cref=\u0022T:EPiServer.Framework.Blobs.FileBlobProvider\u0022 /\u003E instance.",
              "type": "object",
              "properties": {
                "KeepStructure": {
                  "type": "boolean",
                  "description": "Set to true to keep created folder structure even if folders are empty"
                },
                "Path": {
                  "type": "string",
                  "description": "Path to blob repository"
                }
              }
            },
            "FirstRequestInitializer": {
              "description": "Specifies settings for first request initialization",
              "type": "object",
              "properties": {
                "IgnoredPaths": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Specifies for which paths redirection should be ignored"
                  },
                  "description": "Specifies for which paths redirection should be ignored"
                },
                "IgnoreRedirectExtensions": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Specifies for which extensions redirection should be ignored"
                  },
                  "description": "Specifies for which extensions redirection should be ignored"
                }
              }
            },
            "GlobalizationSettings": {
              "description": "Globalization settings that allows to set culture",
              "type": "object",
              "properties": {
                "CultureLanguageCode": {
                  "type": "string",
                  "description": "Gets or sets the culture language code in web.config."
                },
                "UICultureLanguageCode": {
                  "type": "string",
                  "description": "Gets or sets the UI culture language code in web.config."
                },
                "UseBrowserLanguagePreferences": {
                  "type": "boolean",
                  "description": "Specifies if browser language preferences should be used to set content language when\r\nlanguage can not be determined from url."
                }
              }
            },
            "Html": {
              "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Contains settings for how html content should be handled within CMS",
              "type": "object",
              "properties": {
                "UnEncodedTags": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Set which tags should not be encoded when string properties are called at \u003Csee cref=\u0022M:EPiServer.Core.PropertyData.EncodeForWebString(System.String)\u0022 /\u003E"
                  },
                  "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Set which tags should not be encoded when string properties are called at \u003Csee cref=\u0022M:EPiServer.Core.PropertyData.EncodeForWebString(System.String)\u0022 /\u003E"
                }
              }
            },
            "JsonFormatter": {
              "type": "object",
              "properties": {
                "AssemblyModuleInputFormatters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "CodeBase": {
                        "$ref": "#/$defs/string"
                      },
                      "CustomAttributes": {
                        "$ref": "#/$defs/arrayOfCustomAttributeData"
                      },
                      "DefinedTypes": {
                        "$ref": "#/$defs/arrayOfTypeInfo"
                      },
                      "EntryPoint": {
                        "$ref": "#/$defs/methodInfo"
                      },
                      "EscapedCodeBase": {
                        "$ref": "#/$defs/string"
                      },
                      "ExportedTypes": {
                        "$ref": "#/$defs/arrayOfType1"
                      },
                      "FullName": {
                        "$ref": "#/$defs/string"
                      },
                      "GlobalAssemblyCache": {
                        "$ref": "#/$defs/boolean1"
                      },
                      "HostContext": {
                        "$ref": "#/$defs/integer1"
                      },
                      "ImageRuntimeVersion": {
                        "$ref": "#/$defs/string"
                      },
                      "IsCollectible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsDynamic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsFullyTrusted": {
                        "$ref": "#/$defs/boolean"
                      },
                      "Location": {
                        "$ref": "#/$defs/string"
                      },
                      "ManifestModule": {
                        "$ref": "#/$defs/module"
                      },
                      "Modules": {
                        "$ref": "#/$defs/arrayOfModule"
                      },
                      "ReflectionOnly": {
                        "$ref": "#/$defs/boolean"
                      },
                      "SecurityRuleSet": {
                        "$ref": "#/$defs/securityRuleSet"
                      }
                    },
                    "description": "All registered \u003Csee cref=\u0022T:EPiServer.Formatters.IJsonInputFormatter\u0022 /\u003E for assemblies",
                    "readOnly": true
                  },
                  "description": "All registered \u003Csee cref=\u0022T:EPiServer.Formatters.IJsonInputFormatter\u0022 /\u003E for assemblies",
                  "readOnly": true
                },
                "AssemblyModuleOutputFormatters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "CodeBase": {
                        "$ref": "#/$defs/string"
                      },
                      "CustomAttributes": {
                        "$ref": "#/$defs/arrayOfCustomAttributeData"
                      },
                      "DefinedTypes": {
                        "$ref": "#/$defs/arrayOfTypeInfo"
                      },
                      "EntryPoint": {
                        "$ref": "#/$defs/methodInfo"
                      },
                      "EscapedCodeBase": {
                        "$ref": "#/$defs/string"
                      },
                      "ExportedTypes": {
                        "$ref": "#/$defs/arrayOfType1"
                      },
                      "FullName": {
                        "$ref": "#/$defs/string"
                      },
                      "GlobalAssemblyCache": {
                        "$ref": "#/$defs/boolean1"
                      },
                      "HostContext": {
                        "$ref": "#/$defs/integer1"
                      },
                      "ImageRuntimeVersion": {
                        "$ref": "#/$defs/string"
                      },
                      "IsCollectible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsDynamic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsFullyTrusted": {
                        "$ref": "#/$defs/boolean"
                      },
                      "Location": {
                        "$ref": "#/$defs/string"
                      },
                      "ManifestModule": {
                        "$ref": "#/$defs/module"
                      },
                      "Modules": {
                        "$ref": "#/$defs/arrayOfModule"
                      },
                      "ReflectionOnly": {
                        "$ref": "#/$defs/boolean"
                      },
                      "SecurityRuleSet": {
                        "$ref": "#/$defs/securityRuleSet"
                      }
                    },
                    "description": "All registered \u003Csee cref=\u0022T:EPiServer.Formatters.IJsonOutputFormatter\u0022 /\u003E for assemblies",
                    "readOnly": true
                  },
                  "description": "All registered \u003Csee cref=\u0022T:EPiServer.Formatters.IJsonOutputFormatter\u0022 /\u003E for assemblies",
                  "readOnly": true
                },
                "FallbackFormatterType": {
                  "enum": [
                    "Newtonsoft",
                    "SystemText"
                  ],
                  "description": "Defines the fallback formatter to use when no assembly or type registration applies"
                },
                "TypeModuleInputFormatters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Assembly": {
                        "$ref": "#/$defs/assembly"
                      },
                      "AssemblyQualifiedName": {
                        "$ref": "#/$defs/string"
                      },
                      "Attributes": {
                        "$ref": "#/$defs/typeAttributes"
                      },
                      "BaseType": {
                        "$ref": "#/$defs/type"
                      },
                      "ContainsGenericParameters": {
                        "$ref": "#/$defs/boolean"
                      },
                      "CustomAttributes": {
                        "$ref": "#/$defs/arrayOfCustomAttributeData"
                      },
                      "DeclaringMethod": {
                        "$ref": "#/$defs/methodBase"
                      },
                      "DeclaringType": {
                        "$ref": "#/$defs/type"
                      },
                      "FullName": {
                        "$ref": "#/$defs/string"
                      },
                      "GenericParameterAttributes": {
                        "$ref": "#/$defs/genericParameterAttributes"
                      },
                      "GenericParameterPosition": {
                        "$ref": "#/$defs/integer"
                      },
                      "GenericTypeArguments": {
                        "$ref": "#/$defs/arrayOfType"
                      },
                      "GUID": {
                        "$ref": "#/$defs/guid"
                      },
                      "HasElementType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAbstract": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAnsiClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAutoClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAutoLayout": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsByRef": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsByRefLike": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsCollectible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsCOMObject": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsConstructedGenericType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsContextful": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsEnum": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsExplicitLayout": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericMethodParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericTypeDefinition": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericTypeParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsImport": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsInterface": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsLayoutSequential": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsMarshalByRef": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNested": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedAssembly": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamANDAssem": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamily": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamORAssem": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedPrivate": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNotPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPointer": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPrimitive": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSealed": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecurityCritical": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecuritySafeCritical": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecurityTransparent": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSerializable": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSignatureType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSpecialName": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSZArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsTypeDefinition": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsUnicodeClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsValueType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsVariableBoundArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsVisible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "MemberType": {
                        "$ref": "#/$defs/memberTypes"
                      },
                      "MetadataToken": {
                        "$ref": "#/$defs/integer"
                      },
                      "Module": {
                        "$ref": "#/$defs/module"
                      },
                      "Name": {
                        "$ref": "#/$defs/string"
                      },
                      "Namespace": {
                        "$ref": "#/$defs/string"
                      },
                      "ReflectedType": {
                        "$ref": "#/$defs/type"
                      },
                      "StructLayoutAttribute": {
                        "$ref": "#/$defs/structLayoutAttribute"
                      },
                      "TypeHandle": {
                        "$ref": "#/$defs/runtimeTypeHandle"
                      },
                      "TypeInitializer": {
                        "$ref": "#/$defs/constructorInfo"
                      },
                      "UnderlyingSystemType": {
                        "$ref": "#/$defs/type"
                      }
                    },
                    "description": "All registered \u003Csee cref=\u0022T:EPiServer.Formatters.IJsonInputFormatter\u0022 /\u003E for types",
                    "readOnly": true
                  },
                  "description": "All registered \u003Csee cref=\u0022T:EPiServer.Formatters.IJsonInputFormatter\u0022 /\u003E for types",
                  "readOnly": true
                },
                "TypeModuleOutputFormatters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Assembly": {
                        "$ref": "#/$defs/assembly"
                      },
                      "AssemblyQualifiedName": {
                        "$ref": "#/$defs/string"
                      },
                      "Attributes": {
                        "$ref": "#/$defs/typeAttributes"
                      },
                      "BaseType": {
                        "$ref": "#/$defs/type"
                      },
                      "ContainsGenericParameters": {
                        "$ref": "#/$defs/boolean"
                      },
                      "CustomAttributes": {
                        "$ref": "#/$defs/arrayOfCustomAttributeData"
                      },
                      "DeclaringMethod": {
                        "$ref": "#/$defs/methodBase"
                      },
                      "DeclaringType": {
                        "$ref": "#/$defs/type"
                      },
                      "FullName": {
                        "$ref": "#/$defs/string"
                      },
                      "GenericParameterAttributes": {
                        "$ref": "#/$defs/genericParameterAttributes"
                      },
                      "GenericParameterPosition": {
                        "$ref": "#/$defs/integer"
                      },
                      "GenericTypeArguments": {
                        "$ref": "#/$defs/arrayOfType"
                      },
                      "GUID": {
                        "$ref": "#/$defs/guid"
                      },
                      "HasElementType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAbstract": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAnsiClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAutoClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAutoLayout": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsByRef": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsByRefLike": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsCollectible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsCOMObject": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsConstructedGenericType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsContextful": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsEnum": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsExplicitLayout": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericMethodParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericTypeDefinition": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericTypeParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsImport": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsInterface": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsLayoutSequential": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsMarshalByRef": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNested": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedAssembly": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamANDAssem": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamily": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamORAssem": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedPrivate": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNotPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPointer": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPrimitive": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSealed": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecurityCritical": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecuritySafeCritical": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecurityTransparent": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSerializable": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSignatureType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSpecialName": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSZArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsTypeDefinition": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsUnicodeClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsValueType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsVariableBoundArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsVisible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "MemberType": {
                        "$ref": "#/$defs/memberTypes"
                      },
                      "MetadataToken": {
                        "$ref": "#/$defs/integer"
                      },
                      "Module": {
                        "$ref": "#/$defs/module"
                      },
                      "Name": {
                        "$ref": "#/$defs/string"
                      },
                      "Namespace": {
                        "$ref": "#/$defs/string"
                      },
                      "ReflectedType": {
                        "$ref": "#/$defs/type"
                      },
                      "StructLayoutAttribute": {
                        "$ref": "#/$defs/structLayoutAttribute"
                      },
                      "TypeHandle": {
                        "$ref": "#/$defs/runtimeTypeHandle"
                      },
                      "TypeInitializer": {
                        "$ref": "#/$defs/constructorInfo"
                      },
                      "UnderlyingSystemType": {
                        "$ref": "#/$defs/type"
                      }
                    },
                    "description": "All registered \u003Csee cref=\u0022T:EPiServer.Formatters.IJsonOutputFormatter\u0022 /\u003E for types",
                    "readOnly": true
                  },
                  "description": "All registered \u003Csee cref=\u0022T:EPiServer.Formatters.IJsonOutputFormatter\u0022 /\u003E for types",
                  "readOnly": true
                }
              }
            },
            "LicensePath": {
              "type": "object",
              "properties": {
                "Path": {
                  "type": "string"
                }
              }
            },
            "LinkValidator": {
              "type": "object",
              "properties": {
                "ExcludePatterns": {
                  "$ref": "#/$defs/iListOfString1"
                },
                "ExternalLinkErrorThreshold": {
                  "type": "integer"
                },
                "ExternalLinkMinimumRequestInterval": {
                  "$ref": "#/$defs/timeSpan"
                },
                "HttpRequestTimeout": {
                  "$ref": "#/$defs/timeSpan"
                },
                "InternalLinkValidation": {
                  "enum": [
                    "Off",
                    "Api",
                    "Request"
                  ]
                },
                "MaximumRunTime": {
                  "$ref": "#/$defs/timeSpan"
                },
                "ProxyAddress": {
                  "$ref": "#/$defs/uri"
                },
                "ProxyDomain": {
                  "type": "string"
                },
                "ProxyPassword": {
                  "type": "string"
                },
                "ProxyUser": {
                  "type": "string"
                },
                "RecheckInterval": {
                  "$ref": "#/$defs/timeSpan"
                },
                "UserAgent": {
                  "type": "string"
                }
              }
            },
            "LinuxEnvironment": {
              "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Specifies linux environment options",
              "type": "object",
              "properties": {
                "MinimumThreadCount": {
                  "type": "integer",
                  "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Sets the minimum thread count, helps with database connections.  Default is 16 and changes only affect linux operating system.. "
                }
              }
            },
            "Localization": {
              "description": "Contains various options that controls how Localization in EPiServer is setup.",
              "type": "object",
              "properties": {
                "FallbackBehavior": {
                  "enum": [
                    "None",
                    "Echo",
                    "MissingMessage",
                    "FallbackCulture",
                    "Null"
                  ],
                  "description": "Specifies which fallback behaviour to use when a localization string does not exist."
                },
                "FallbackCulture": {
                  "type": "object",
                  "properties": {
                    "Calendar": {
                      "$ref": "#/$defs/calendar"
                    },
                    "CompareInfo": {
                      "$ref": "#/$defs/compareInfo"
                    },
                    "CultureTypes": {
                      "$ref": "#/$defs/cultureTypes"
                    },
                    "DateTimeFormat": {
                      "$ref": "#/$defs/dateTimeFormatInfo"
                    },
                    "DisplayName": {
                      "$ref": "#/$defs/string"
                    },
                    "EnglishName": {
                      "$ref": "#/$defs/string"
                    },
                    "IetfLanguageTag": {
                      "$ref": "#/$defs/string"
                    },
                    "IsNeutralCulture": {
                      "$ref": "#/$defs/boolean"
                    },
                    "IsReadOnly": {
                      "$ref": "#/$defs/boolean"
                    },
                    "KeyboardLayoutId": {
                      "$ref": "#/$defs/integer"
                    },
                    "LCID": {
                      "$ref": "#/$defs/integer"
                    },
                    "Name": {
                      "$ref": "#/$defs/string"
                    },
                    "NativeName": {
                      "$ref": "#/$defs/string"
                    },
                    "NumberFormat": {
                      "$ref": "#/$defs/numberFormatInfo"
                    },
                    "OptionalCalendars": {
                      "$ref": "#/$defs/arrayOfCalendar"
                    },
                    "Parent": {
                      "$ref": "#/$defs/cultureInfo"
                    },
                    "TextInfo": {
                      "$ref": "#/$defs/textInfo"
                    },
                    "ThreeLetterISOLanguageName": {
                      "$ref": "#/$defs/string"
                    },
                    "ThreeLetterWindowsLanguageName": {
                      "$ref": "#/$defs/string"
                    },
                    "TwoLetterISOLanguageName": {
                      "$ref": "#/$defs/string"
                    },
                    "UseUserOverride": {
                      "$ref": "#/$defs/boolean"
                    }
                  },
                  "description": "Specifies which fallback culture that is used when a localization string does not exist in a specific language."
                },
                "Providers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Name": {
                        "$ref": "#/$defs/string5"
                      },
                      "ProviderType": {
                        "$ref": "#/$defs/type2"
                      }
                    },
                    "description": "The localizations providers that should be used by \u003Csee cref=\u0022T:EPiServer.Framework.Localization.ProviderBasedLocalizationService\u0022 /\u003E.",
                    "readOnly": true
                  },
                  "description": "The localizations providers that should be used by \u003Csee cref=\u0022T:EPiServer.Framework.Localization.ProviderBasedLocalizationService\u0022 /\u003E.",
                  "readOnly": true
                }
              }
            },
            "MappedRoles": {
              "description": "Options for mapped roles, ",
              "type": "object",
              "properties": {
                "Items": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/$defs/mappedRoleOptions"
                  },
                  "description": "key is mapped role name the value is list of roles that be mapped to.",
                  "readOnly": true
                }
              }
            },
            "Media": {
              "description": "EPiServer media files options",
              "type": "object",
              "properties": {
                "CacheControl": {
                  "type": "string",
                  "description": "Gets the cache control settings. Defaults to \u0022auto\u0022"
                },
                "DefaultContentType": {
                  "type": "string",
                  "description": "The default content type for a request if the ContentType cannot be determined from context."
                },
                "ExpirationTime": {
                  "type": "string",
                  "format": "duration",
                  "description": "Gets the cache expiration time."
                },
                "PreProcessors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Assembly": {
                        "$ref": "#/$defs/assembly"
                      },
                      "AssemblyQualifiedName": {
                        "$ref": "#/$defs/string"
                      },
                      "Attributes": {
                        "$ref": "#/$defs/typeAttributes"
                      },
                      "BaseType": {
                        "$ref": "#/$defs/type"
                      },
                      "ContainsGenericParameters": {
                        "$ref": "#/$defs/boolean"
                      },
                      "CustomAttributes": {
                        "$ref": "#/$defs/arrayOfCustomAttributeData"
                      },
                      "DeclaringMethod": {
                        "$ref": "#/$defs/methodBase"
                      },
                      "DeclaringType": {
                        "$ref": "#/$defs/type"
                      },
                      "FullName": {
                        "$ref": "#/$defs/string"
                      },
                      "GenericParameterAttributes": {
                        "$ref": "#/$defs/genericParameterAttributes"
                      },
                      "GenericParameterPosition": {
                        "$ref": "#/$defs/integer"
                      },
                      "GenericTypeArguments": {
                        "$ref": "#/$defs/arrayOfType"
                      },
                      "GUID": {
                        "$ref": "#/$defs/guid"
                      },
                      "HasElementType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAbstract": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAnsiClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAutoClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAutoLayout": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsByRef": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsByRefLike": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsCollectible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsCOMObject": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsConstructedGenericType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsContextful": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsEnum": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsExplicitLayout": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericMethodParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericTypeDefinition": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericTypeParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsImport": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsInterface": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsLayoutSequential": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsMarshalByRef": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNested": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedAssembly": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamANDAssem": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamily": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamORAssem": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedPrivate": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNotPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPointer": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPrimitive": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSealed": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecurityCritical": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecuritySafeCritical": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecurityTransparent": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSerializable": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSignatureType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSpecialName": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSZArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsTypeDefinition": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsUnicodeClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsValueType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsVariableBoundArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsVisible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "MemberType": {
                        "$ref": "#/$defs/memberTypes"
                      },
                      "MetadataToken": {
                        "$ref": "#/$defs/integer"
                      },
                      "Module": {
                        "$ref": "#/$defs/module"
                      },
                      "Name": {
                        "$ref": "#/$defs/string"
                      },
                      "Namespace": {
                        "$ref": "#/$defs/string"
                      },
                      "ReflectedType": {
                        "$ref": "#/$defs/type"
                      },
                      "StructLayoutAttribute": {
                        "$ref": "#/$defs/structLayoutAttribute"
                      },
                      "TypeHandle": {
                        "$ref": "#/$defs/runtimeTypeHandle"
                      },
                      "TypeInitializer": {
                        "$ref": "#/$defs/constructorInfo"
                      },
                      "UnderlyingSystemType": {
                        "$ref": "#/$defs/type"
                      }
                    },
                    "description": "Specifies instances of \u003Csee cref=\u0022T:EPiServer.Web.IStaticFilePreProcessor\u0022 /\u003E that are called during a media response.",
                    "readOnly": true
                  },
                  "description": "Specifies instances of \u003Csee cref=\u0022T:EPiServer.Web.IStaticFilePreProcessor\u0022 /\u003E that are called during a media response.",
                  "readOnly": true
                }
              }
            },
            "Notification": {
              "description": "Specifies settings used by notification system",
              "type": "object",
              "properties": {
                "NotificationEmailAddress": {
                  "type": "string",
                  "description": "System default email address for notification emails."
                },
                "NotificationEmailDisplayName": {
                  "type": "string",
                  "description": "System default sender name for no notification emails."
                }
              }
            },
            "RegisterAdminUser": {
              "type": "object",
              "properties": {
                "Behavior": {
                  "enum": [
                    "Disabled",
                    "Enabled",
                    "LocalRequestsOnly",
                    "SingleUserOnly"
                  ]
                },
                "Roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "Routing": {
              "description": "Contains settings for content routing",
              "type": "object",
              "properties": {
                "ContentAssetsBasePath": {
                  "enum": [
                    "Root",
                    "ContentOwner"
                  ],
                  "description": "Gets or sets a value indicating whether url should be based on the owning content url or should be base on the ContentAsset structure."
                },
                "IsUrlCacheEnabled": {
                  "type": "boolean",
                  "description": "Specifies if generated content urls should be cached",
                  "readOnly": true
                },
                "PreferredUrlFormat": {
                  "enum": [
                    "Hierarchical",
                    "Simple"
                  ],
                  "description": "Specifies whether hierarchical or simple URL should be used when generating outgoing URL for an\r\n\u003Csee cref=\u0022T:EPiServer.Core.IContent\u0022 /\u003E instance."
                },
                "PreferredUrlFormatRedirection": {
                  "enum": [
                    "None",
                    "Permanent",
                    "Temporary"
                  ],
                  "description": "Specifies the redirection behavior when a preferred URL format of a page has been found."
                },
                "ShortcutRedirection": {
                  "enum": [
                    "None",
                    "Permanent",
                    "Temporary"
                  ],
                  "description": "Specifies how pages with a shortcut should be handled when routed to"
                },
                "StrictLanguageRouting": {
                  "type": "boolean",
                  "description": "Defines if strict language determination should be used during routing."
                },
                "UrlCacheExpirationTime": {
                  "type": "string",
                  "format": "duration",
                  "description": "Gets the content url cache expiration time."
                },
                "UseEditHostForOutgoingMediaUrls": {
                  "type": "boolean",
                  "description": "Specifies that the \u003Csee cref=\u0022T:EPiServer.Web.HostDefinitionType\u0022 /\u003E that is \u003Csee cref=\u0022F:EPiServer.Web.HostDefinitionType.Edit\u0022 /\u003E should be used when generating outgoing URLs for \u003Csee cref=\u0022T:EPiServer.Core.MediaData\u0022 /\u003E."
                },
                "UsePrimaryHostForOutgoingUrls": {
                  "type": "boolean",
                  "description": "Specifies that the \u003Csee cref=\u0022T:EPiServer.Web.HostDefinitionType\u0022 /\u003E that is \u003Csee cref=\u0022F:EPiServer.Web.HostDefinitionType.Primary\u0022 /\u003E should be used when generating outgoing URLs."
                },
                "UseTrailingSlash": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether a trailing slash should be added for urls to content."
                }
              }
            },
            "Scheduler": {
              "description": "Contains settings for the scheduler",
              "type": "object",
              "properties": {
                "ContentCacheSlidingExpiration": {
                  "type": "string",
                  "format": "duration",
                  "description": "The sliding cache for how long content is cached when retrieved from a scheduled job."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Set to false to disable the scheduler. Default value is true."
                },
                "MaximumExecutionAttempts": {
                  "type": "integer",
                  "description": "            Indicates the maximum number times jobs should be executed in case a controlled or uncontrolled server shutdown interrupted their execution. \r\n            Default value is 10."
                },
                "MinimumExecutionInterval": {
                  "type": "integer",
                  "description": "Indicates the minimum time in seconds between starting executions of jobs. Note that\r\nsetting a lower value can cause more jobs to execute in parallel which cause higher\r\nallocations of resources such as threads."
                },
                "PingTime": {
                  "type": "string",
                  "format": "duration",
                  "description": "Scheduler ping time. Default value is 30 seconds."
                }
              }
            },
            "ScriptParser": {
              "description": "Define script parser for string parsing",
              "type": "object",
              "properties": {
                "AttributeNames": {
                  "type": "string",
                  "deprecated": true
                },
                "ElementAttributes": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The names of attributes on an element, separated by commas, can function as either a whitelist or a blacklist depending on the value of the\u003Csee cref=\u0022T:EPiServer.Core.Html.StringParsing.ScriptParserOperationMode\u0022 /\u003E.\r\nIf \u003Csee cref=\u0022T:EPiServer.Core.Html.StringParsing.ScriptParserOperationMode\u0022 /\u003E is \u003Csee cref=\u0022F:EPiServer.Core.Html.StringParsing.ScriptParserOperationMode.Allow\u0022 /\u003E then they considered a whitelist; otherwise, they are considered a blacklist.\r\nThe key is element name and the value is a comma-separated list of attribute names.\r\nif you define wildcard (*) as element name, it will be applied to all elements.\r\nOne is able to define attribute names ending with a wildcard, like \u0022on*\u0022.",
                  "readOnly": true
                },
                "IllegalUriSchemes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Specifies which schemes are considered illegal for links in url, link item and xhtml properties when \u003Csee cref=\u0022P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.LoadingMode\u0022 /\u003E and/or \u003Csee cref=\u0022P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.SavingMode\u0022 /\u003E is not \u003Csee cref=\u0022F:EPiServer.Core.Html.StringParsing.ScriptParserMode.Keep\u0022 /\u003E."
                  },
                  "description": "Specifies which schemes are considered illegal for links in url, link item and xhtml properties when \u003Csee cref=\u0022P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.LoadingMode\u0022 /\u003E and/or \u003Csee cref=\u0022P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.SavingMode\u0022 /\u003E is not \u003Csee cref=\u0022F:EPiServer.Core.Html.StringParsing.ScriptParserMode.Keep\u0022 /\u003E."
                },
                "LoadingMode": {
                  "enum": [
                    "Keep",
                    "Remove",
                    "ThrowException"
                  ],
                  "description": "Define how string should be parsed when it loads from database."
                },
                "MediaExtensionsToParse": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Specifies which media extension that should be parsed for illegal elements/attributes, such as script, during upload."
                  },
                  "description": "Specifies which media extension that should be parsed for illegal elements/attributes, such as script, during upload."
                },
                "MediaUploadMode": {
                  "enum": [
                    "Keep",
                    "Remove",
                    "ThrowException"
                  ],
                  "description": "Defines how illegal elements/attributes should be handled for uploaded media matching extensions specified in \u003Csee cref=\u0022P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.MediaExtensionsToParse\u0022 /\u003E."
                },
                "Mode": {
                  "enum": [
                    "Allow",
                    "Block"
                  ],
                  "description": "The operation mode for \u003Csee cref=\u0022P:EPiServer.Core.Html.StringParsing.ScriptParserOptions.ElementAttributes\u0022 /\u003E."
                },
                "SavingMode": {
                  "enum": [
                    "Keep",
                    "Remove",
                    "ThrowException"
                  ],
                  "description": "Define how string should be parsed when it saves into database."
                }
              }
            },
            "SearchWordCriterion": {
              "description": "Contains various options that can be used to configure how SearchWordCriterionOptions should be handled within cms.",
              "type": "object",
              "properties": {
                "SearchStringRegexpression": {
                  "type": "string",
                  "description": "Serach reg expression."
                }
              }
            },
            "SimpleAddress": {
              "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Contains settings for how simple address matching should be handled within CMS",
              "type": "object",
              "properties": {
                "RequireLanguageMatch": {
                  "type": "boolean",
                  "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Defines if the language must match when resolving a simple address."
                }
              }
            },
            "Smtp": {
              "description": "Option for sending email with SMTP.",
              "type": "object",
              "properties": {
                "DeliveryMethod": {
                  "enum": [
                    "Network",
                    "SpecifiedPickupDirectory"
                  ],
                  "description": "Delivery method. Network or PickupDirectory"
                },
                "Network": {
                  "type": "object",
                  "properties": {
                    "Host": {
                      "$ref": "#/$defs/string6"
                    },
                    "Password": {
                      "$ref": "#/$defs/string7"
                    },
                    "Port": {
                      "$ref": "#/$defs/nullableOfInt32"
                    },
                    "UserName": {
                      "$ref": "#/$defs/string8"
                    },
                    "UseSsl": {
                      "$ref": "#/$defs/nullableOfBoolean"
                    }
                  },
                  "description": "Smtp settings for Network delivery method"
                },
                "SenderDisplayName": {
                  "type": "string",
                  "description": "Sender\u0027s Display Name",
                  "deprecated": true
                },
                "SenderEmailAddress": {
                  "type": "string",
                  "description": "Sender\u0027s Email Address",
                  "deprecated": true
                },
                "SpecifiedPickupDirectory": {
                  "type": "object",
                  "properties": {
                    "PickupDirectoryLocation": {
                      "$ref": "#/$defs/string9"
                    }
                  },
                  "description": "Pickup directory to place email files in"
                }
              }
            },
            "SystemTextJsonSettings": {
              "type": "object",
              "properties": {
                "SerializerOptions": {
                  "type": "object",
                  "properties": {
                    "AllowInputFormatterExceptionMessages": {
                      "type": "boolean"
                    },
                    "JsonSerializerOptions": {
                      "$ref": "#/$defs/jsonSerializerOptions"
                    }
                  },
                  "description": "The \u003Csee cref=\u0022T:System.Text.Json.JsonSerializerOptions\u0022 /\u003E used by the formatter"
                }
              }
            },
            "TagHelper": {
              "description": "Contains settings for how TagHelper behaviors within CMS",
              "type": "object",
              "properties": {
                "SuppressOutputOnEmptyProperty": {
                  "type": "boolean",
                  "description": "            Defines if empty html from empty property should be omitted or not\r\n            when rendering content property using TagHelpers."
                }
              }
            },
            "Template": {
              "description": "Provides access to configure cms template system.",
              "type": "object",
              "properties": {
                "RegisterFakeTemplate": {
                  "type": "boolean",
                  "description": "Register a fake template for use when external templates is used"
                },
                "ScanViewsForTemplateRegistration": {
                  "type": "boolean",
                  "description": "Scan views for template registration."
                },
                "TemplateAssemblies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "CodeBase": {
                        "$ref": "#/$defs/string"
                      },
                      "CustomAttributes": {
                        "$ref": "#/$defs/arrayOfCustomAttributeData"
                      },
                      "DefinedTypes": {
                        "$ref": "#/$defs/arrayOfTypeInfo"
                      },
                      "EntryPoint": {
                        "$ref": "#/$defs/methodInfo"
                      },
                      "EscapedCodeBase": {
                        "$ref": "#/$defs/string"
                      },
                      "ExportedTypes": {
                        "$ref": "#/$defs/arrayOfType1"
                      },
                      "FullName": {
                        "$ref": "#/$defs/string"
                      },
                      "GlobalAssemblyCache": {
                        "$ref": "#/$defs/boolean1"
                      },
                      "HostContext": {
                        "$ref": "#/$defs/integer1"
                      },
                      "ImageRuntimeVersion": {
                        "$ref": "#/$defs/string"
                      },
                      "IsCollectible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsDynamic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsFullyTrusted": {
                        "$ref": "#/$defs/boolean"
                      },
                      "Location": {
                        "$ref": "#/$defs/string"
                      },
                      "ManifestModule": {
                        "$ref": "#/$defs/module"
                      },
                      "Modules": {
                        "$ref": "#/$defs/arrayOfModule"
                      },
                      "ReflectionOnly": {
                        "$ref": "#/$defs/boolean"
                      },
                      "SecurityRuleSet": {
                        "$ref": "#/$defs/securityRuleSet"
                      }
                    },
                    "description": "The assemblies that is scanned for templates.",
                    "readOnly": true
                  },
                  "description": "The assemblies that is scanned for templates.",
                  "readOnly": true
                }
              }
            },
            "UrlSegment": {
              "type": "object",
              "properties": {
                "CharacterMap": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specifies a mapping table for characters not allowed due to \u003Csee cref=\u0022P:EPiServer.Web.UrlSegmentOptions.ValidCharacters\u0022 /\u003E.",
                    "readOnly": true
                  },
                  "description": "Specifies a mapping table for characters not allowed due to \u003Csee cref=\u0022P:EPiServer.Web.UrlSegmentOptions.ValidCharacters\u0022 /\u003E.",
                  "readOnly": true
                },
                "ReservedSegments": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Defines segments that are reserved by e.g. IIS"
                  },
                  "description": "Defines segments that are reserved by e.g. IIS"
                },
                "SupportIriCharacters": {
                  "type": "boolean",
                  "description": "Indicates if segments supports IRI characters. If \u003Csee cref=\u0022P:EPiServer.Web.UrlSegmentOptions.ValidCharacters\u0022 /\u003E are set to allow \r\ncharacters that are not allowed in url segments according to url specification this should be set to true."
                },
                "UseLowercase": {
                  "type": "boolean",
                  "description": "Indicates if only lowercase characters should be used in url segments"
                },
                "ValidCharacters": {
                  "type": "string",
                  "description": "Gets or sets the characters that are valid to use as url segment, will be used as argument to Regexp"
                }
              }
            },
            "Validation": {
              "description": "Contains options that controls how validation is performed.",
              "type": "object",
              "properties": {
                "NonRecursiveTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Assembly": {
                        "$ref": "#/$defs/assembly"
                      },
                      "AssemblyQualifiedName": {
                        "$ref": "#/$defs/string"
                      },
                      "Attributes": {
                        "$ref": "#/$defs/typeAttributes"
                      },
                      "BaseType": {
                        "$ref": "#/$defs/type"
                      },
                      "ContainsGenericParameters": {
                        "$ref": "#/$defs/boolean"
                      },
                      "CustomAttributes": {
                        "$ref": "#/$defs/arrayOfCustomAttributeData"
                      },
                      "DeclaringMethod": {
                        "$ref": "#/$defs/methodBase"
                      },
                      "DeclaringType": {
                        "$ref": "#/$defs/type"
                      },
                      "FullName": {
                        "$ref": "#/$defs/string"
                      },
                      "GenericParameterAttributes": {
                        "$ref": "#/$defs/genericParameterAttributes"
                      },
                      "GenericParameterPosition": {
                        "$ref": "#/$defs/integer"
                      },
                      "GenericTypeArguments": {
                        "$ref": "#/$defs/arrayOfType"
                      },
                      "GUID": {
                        "$ref": "#/$defs/guid"
                      },
                      "HasElementType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAbstract": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAnsiClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAutoClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsAutoLayout": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsByRef": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsByRefLike": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsCollectible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsCOMObject": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsConstructedGenericType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsContextful": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsEnum": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsExplicitLayout": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericMethodParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericTypeDefinition": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsGenericTypeParameter": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsImport": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsInterface": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsLayoutSequential": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsMarshalByRef": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNested": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedAssembly": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamANDAssem": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamily": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedFamORAssem": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedPrivate": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNestedPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsNotPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPointer": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPrimitive": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsPublic": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSealed": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecurityCritical": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecuritySafeCritical": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSecurityTransparent": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSerializable": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSignatureType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSpecialName": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsSZArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsTypeDefinition": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsUnicodeClass": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsValueType": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsVariableBoundArray": {
                        "$ref": "#/$defs/boolean"
                      },
                      "IsVisible": {
                        "$ref": "#/$defs/boolean"
                      },
                      "MemberType": {
                        "$ref": "#/$defs/memberTypes"
                      },
                      "MetadataToken": {
                        "$ref": "#/$defs/integer"
                      },
                      "Module": {
                        "$ref": "#/$defs/module"
                      },
                      "Name": {
                        "$ref": "#/$defs/string"
                      },
                      "Namespace": {
                        "$ref": "#/$defs/string"
                      },
                      "ReflectedType": {
                        "$ref": "#/$defs/type"
                      },
                      "StructLayoutAttribute": {
                        "$ref": "#/$defs/structLayoutAttribute"
                      },
                      "TypeHandle": {
                        "$ref": "#/$defs/runtimeTypeHandle"
                      },
                      "TypeInitializer": {
                        "$ref": "#/$defs/constructorInfo"
                      },
                      "UnderlyingSystemType": {
                        "$ref": "#/$defs/type"
                      }
                    },
                    "description": "A set of types that should not be validated recursively. ",
                    "readOnly": true
                  },
                  "description": "A set of types that should not be validated recursively. ",
                  "readOnly": true
                }
              }
            },
            "VirtualRole": {
              "description": "Specifies how Virtual roles should be setup.",
              "type": "object",
              "properties": {
                "Roles": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/$defs/virtualRoleBuilder"
                  },
                  "description": "List of all virtual roles that should be setup by the system.",
                  "readOnly": true
                }
              }
            },
            "VisitorGroup": {
              "type": "object",
              "properties": {
                "EnableSession": {
                  "type": "boolean"
                },
                "EnableStatistics": {
                  "type": "boolean"
                },
                "StatisticsPersistanceInterval": {
                  "$ref": "#/$defs/timeSpan"
                }
              }
            },
            "ZipArchiveFileProvider": {
              "description": "Options to configure \u003Csee cref=\u0022T:EPiServer.Web.Hosting.ZipArchiveFileProvider\u0022 /\u003E instances.",
              "type": "object",
              "properties": {
                "TrackChanges": {
                  "type": "boolean",
                  "description": "Specifies if zip archives should be tracked for changes during runtime."
                }
              }
            }
          }
        },
        "CmsUI": {
          "type": "object",
          "properties": {
            "Admin": {
              "type": "object",
              "properties": {
                "SectionsVisibility": {
                  "type": "object",
                  "properties": {
                    "AdministerGroups": {
                      "type": "boolean"
                    },
                    "AdministerUsers": {
                      "type": "boolean"
                    },
                    "AutomaticPublish": {
                      "type": "boolean"
                    },
                    "FullFeaturedManageWebsites": {
                      "type": "boolean"
                    },
                    "License": {
                      "type": "boolean"
                    },
                    "PermissionsForFunctions": {
                      "type": "boolean"
                    },
                    "PluginManager": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "Application": {
              "description": "Contains application config",
              "type": "object",
              "properties": {
                "ConnectionStringOptions": {
                  "type": "object",
                  "properties": {
                    "ConnectionString": {
                      "$ref": "#/$defs/string2"
                    },
                    "Name": {
                      "$ref": "#/$defs/string3"
                    },
                    "ProviderName": {
                      "$ref": "#/$defs/string4"
                    }
                  },
                  "description": "The connection string options"
                },
                "DisableAutoCreateSchema": {
                  "type": "boolean",
                  "description": "Indicates if the aspnet identity schema should be created automatically"
                }
              }
            },
            "ApprovalNotification": {
              "type": "object",
              "properties": {
                "Immediate": {
                  "type": "boolean"
                }
              }
            },
            "CmsFeature": {
              "type": "object",
              "properties": {
                "SectionsVisibility": {
                  "type": "object",
                  "properties": {
                    "Archiving": {
                      "type": "boolean"
                    },
                    "Categories": {
                      "type": "boolean"
                    },
                    "Frames": {
                      "type": "boolean"
                    },
                    "InterfaceLocalization": {
                      "type": "boolean"
                    },
                    "LanguageFallbacks": {
                      "type": "boolean"
                    },
                    "LanguageReplacements": {
                      "type": "boolean"
                    },
                    "Shortcuts": {
                      "type": "boolean"
                    },
                    "SitesComponent": {
                      "type": "boolean"
                    },
                    "SortIndexProperty": {
                      "type": "boolean"
                    },
                    "SortOrderRuleProperty": {
                      "type": "boolean"
                    },
                    "VisibleInMenuProperty": {
                      "type": "boolean"
                    },
                    "VisitorGroups": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "Dashboard": {
              "type": "object",
              "properties": {
                "DashboardRows": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            },
            "HeadlessMode": {
              "type": "object",
              "properties": {
                "HeadlessGadgetEnabled": {
                  "type": "boolean"
                },
                "HeadlessModeEnabled": {
                  "type": "boolean"
                }
              }
            },
            "ImageEditor": {
              "type": "object",
              "properties": {
                "Enabled": {
                  "type": "boolean"
                },
                "SizePresets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Height": {
                        "type": "integer"
                      },
                      "LanguageKey": {
                        "type": "string"
                      },
                      "Name": {
                        "type": "string"
                      },
                      "Width": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "SupportedEditExtensions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "WindowHeight": {
                  "type": "integer"
                },
                "WindowWidth": {
                  "type": "integer"
                }
              }
            },
            "InlineBlockNameProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "Key": {
                    "$ref": "#/$defs/string"
                  },
                  "Value": {
                    "$ref": "#/$defs/string"
                  }
                }
              }
            },
            "Navigation": {
              "type": "object",
              "properties": {
                "Items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Alignment": {
                        "enum": [
                          "Left",
                          "Right"
                        ]
                      },
                      "MenuItemType": {
                        "enum": [
                          "Link",
                          "Section",
                          "DropDown"
                        ]
                      },
                      "MenuPath": {
                        "type": "string"
                      },
                      "SortIndex": {
                        "type": "integer"
                      },
                      "Target": {
                        "type": "string"
                      },
                      "Text": {
                        "type": "string"
                      },
                      "ToolTip": {
                        "type": "string"
                      },
                      "Url": {
                        "type": "string"
                      }
                    },
                    "readOnly": true
                  },
                  "readOnly": true
                }
              }
            },
            "ProjectUI": {
              "type": "object",
              "properties": {
                "ProjectGadgetEnabled": {
                  "type": "boolean"
                },
                "ProjectModeEnabled": {
                  "type": "boolean"
                }
              }
            },
            "ProtectedModule": {
              "type": "object",
              "properties": {
                "AutoDiscovery": {
                  "enum": [
                    "Minimal",
                    "Modules"
                  ]
                },
                "Items": {
                  "$ref": "#/$defs/iListOfModuleDetails"
                },
                "RootPath": {
                  "type": "string"
                }
              }
            },
            "PublicModule": {
              "type": "object",
              "properties": {
                "AutoDiscovery": {
                  "enum": [
                    "Minimal",
                    "Modules"
                  ]
                },
                "Items": {
                  "$ref": "#/$defs/iListOfModuleDetails"
                },
                "RootPath": {
                  "type": "string"
                }
              }
            },
            "RestCache": {
              "type": "object",
              "properties": {
                "DisableResultCaching": {
                  "type": "boolean"
                },
                "SlidingCacheExpiration": {
                  "$ref": "#/$defs/timeSpan"
                }
              }
            },
            "SecuredComponent": {
              "type": "object",
              "properties": {
                "Components": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "AllowedRoles": {
                        "$ref": "#/$defs/iListOfString1"
                      },
                      "DefinitionName": {
                        "type": "string"
                      }
                    },
                    "readOnly": true
                  },
                  "readOnly": true
                }
              }
            },
            "SelectionFactories": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "Key": {
                    "$ref": "#/$defs/string"
                  },
                  "Value": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              }
            },
            "Telemetry": {
              "type": "object",
              "properties": {
                "Enabled": {
                  "type": "boolean"
                },
                "IgnoredCompanies": {
                  "$ref": "#/$defs/listOfString"
                },
                "IgnoredDomains": {
                  "$ref": "#/$defs/listOfString"
                }
              }
            },
            "UI": {
              "type": "object",
              "properties": {
                "ApprovalStepRoleUserLimit": {
                  "type": "integer"
                },
                "AutoPublishMediaOnUpload": {
                  "type": "boolean"
                },
                "DisableVersionDeletion": {
                  "type": "boolean"
                },
                "EditUrl": {
                  "$ref": "#/$defs/uri"
                },
                "InlineBlocksInContentAreaEnabled": {
                  "type": "boolean"
                },
                "PermanentEditRetainPeriod": {
                  "$ref": "#/$defs/timeSpan"
                },
                "PreviewTimeout": {
                  "type": "integer"
                },
                "ReadOnlyInfoUrl": {
                  "type": "string"
                },
                "SimplifyPropertyList": {
                  "type": "boolean"
                },
                "ThemeClass": {
                  "type": "string"
                },
                "UIDefaultValueForSetChangedOnPublish": {
                  "type": "boolean"
                },
                "UIShowGlobalizationUserInterface": {
                  "type": "boolean"
                },
                "UsePreviewTokens": {
                  "type": "boolean"
                },
                "UtilUrl": {
                  "$ref": "#/$defs/uri"
                },
                "WebSocketEnabled": {
                  "type": "boolean"
                }
              }
            },
            "UIShellModule": {
              "type": "object",
              "properties": {
                "DebugView": {
                  "type": "boolean"
                }
              }
            },
            "Upload": {
              "type": "object",
              "properties": {
                "AllowedFileExtensions": {
                  "type": "string"
                },
                "FileSizeLimit": {
                  "type": "integer"
                }
              }
            },
            "UserProfileCriterion": {
              "description": "Specifies options on include profile criterion option.",
              "type": "object",
              "properties": {
                "ExcludeProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "A list of user profile properties that exclude to the visitor group criterion."
                  },
                  "description": "A list of user profile properties that exclude to the visitor group criterion."
                },
                "IncludeProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "A list of user profile properties that include to the visitor group criterion."
                  },
                  "description": "A list of user profile properties that include to the visitor group criterion."
                }
              }
            },
            "View": {
              "type": "object",
              "properties": {
                "Views": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Name": {
                        "type": "string"
                      },
                      "TransformationSettings": {
                        "$ref": "#/$defs/iListOfViewTransformationDetails"
                      }
                    },
                    "readOnly": true
                  },
                  "readOnly": true
                }
              }
            }
          }
        },
        "Telemetry": {
          "type": "object",
          "properties": {
            "Telemetry": {
              "type": "object",
              "properties": {
                "Enabled": {
                  "type": "boolean"
                },
                "OptedIn": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "TinyMce": {
          "type": "object",
          "properties": {
            "TinyMceConfiguration": {
              "description": "Options class for configuring TinyMCE settings usage.",
              "type": "object",
              "properties": {
                "InheritSettingsFromAncestor": {
                  "type": "boolean",
                  "description": "If set to true the setting set on the closest ancestor will be used unless a specific setting has been configured\r\nIf set to false the default setting will be used unless a specific setting has been configured"
                }
              }
            },
            "TinyMcePropertySettings": {
              "description": "Options for Admin Mode property settings",
              "type": "object",
              "properties": {
                "AllowAddingBlocks": {
                  "type": "boolean",
                  "description": "When true, then blocks can be added to TinyMCE editor"
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "When true, then \u003Csee cref=\u0022T:EPiServer.Cms.TinyMce.PropertySettings.Internal.TinyMcePropertySettingsHandler\u0022 /\u003E is enabled"
                },
                "PasteFromWordImportType": {
                  "enum": [
                    "Prompt",
                    "RemoveFormatting",
                    "KeepFormatting"
                  ],
                  "description": "Defines what should happen when pasting content from Word"
                },
                "ToolbarDefault": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Default toolbar"
                  },
                  "description": "Default toolbar"
                },
                "ToolbarExpanded": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Expanded toolbar"
                  },
                  "description": "Expanded toolbar"
                },
                "ToolbarMinimal": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Minimal toolbar"
                  },
                  "description": "Minimal toolbar"
                }
              }
            }
          }
        }
      }
    }
  },
  "$defs": {
    "timeSpan": {
      "type": "string",
      "format": "duration"
    },
    "sameSiteType": {
      "description": "Defines SameSite attribute values.",
      "enum": [
        "None",
        "Lax",
        "Strict"
      ]
    },
    "methodInfo": {
      "type": "object",
      "properties": {
        "Attributes": {
          "$ref": "#/$defs/methodAttributes"
        },
        "CallingConvention": {
          "$ref": "#/$defs/callingConventions"
        },
        "ContainsGenericParameters": {
          "$ref": "#/$defs/boolean"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DeclaringType": {
          "$ref": "#/$defs/type"
        },
        "IsAbstract": {
          "$ref": "#/$defs/boolean"
        },
        "IsAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructedGenericMethod": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructor": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamily": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamilyAndAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamilyOrAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsFinal": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethod": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethodDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsHideBySig": {
          "$ref": "#/$defs/boolean"
        },
        "IsPrivate": {
          "$ref": "#/$defs/boolean"
        },
        "IsPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecuritySafeCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityTransparent": {
          "$ref": "#/$defs/boolean"
        },
        "IsSpecialName": {
          "$ref": "#/$defs/boolean"
        },
        "IsStatic": {
          "$ref": "#/$defs/boolean"
        },
        "IsVirtual": {
          "$ref": "#/$defs/boolean"
        },
        "MemberType": {
          "$ref": "#/$defs/memberTypes"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "MethodHandle": {
          "$ref": "#/$defs/runtimeMethodHandle"
        },
        "MethodImplementationFlags": {
          "$ref": "#/$defs/methodImplAttributes"
        },
        "Module": {
          "$ref": "#/$defs/module"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "ReflectedType": {
          "$ref": "#/$defs/type"
        },
        "ReturnParameter": {
          "$ref": "#/$defs/parameterInfo"
        },
        "ReturnType": {
          "$ref": "#/$defs/type"
        },
        "ReturnTypeCustomAttributes": {
          "$ref": "#/$defs/iCustomAttributeProvider"
        }
      },
      "readOnly": true
    },
    "methodAttributes": {
      "enum": [
        "ReuseSlot",
        "PrivateScope",
        "Private",
        "FamANDAssem",
        "Assembly",
        "Family",
        "FamORAssem",
        "Public",
        "MemberAccessMask",
        "UnmanagedExport",
        "Static",
        "Final",
        "Virtual",
        "HideBySig",
        "NewSlot",
        "VtableLayoutMask",
        "CheckAccessOnOverride",
        "Abstract",
        "SpecialName",
        "RTSpecialName",
        "PinvokeImpl",
        "HasSecurity",
        "RequireSecObject",
        "ReservedMask"
      ],
      "readOnly": true
    },
    "callingConventions": {
      "enum": [
        "Standard",
        "VarArgs",
        "Any",
        "HasThis",
        "ExplicitThis"
      ],
      "readOnly": true
    },
    "boolean": {
      "type": "boolean",
      "readOnly": true
    },
    "arrayOfCustomAttributeData": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "AttributeType": {
            "$ref": "#/$defs/type"
          },
          "Constructor": {
            "$ref": "#/$defs/constructorInfo"
          },
          "ConstructorArguments": {
            "$ref": "#/$defs/iListOfCustomAttributeTypedArgument"
          },
          "NamedArguments": {
            "$ref": "#/$defs/iListOfCustomAttributeNamedArgument"
          }
        },
        "readOnly": true
      },
      "readOnly": true
    },
    "type": {
      "type": "object",
      "properties": {
        "Assembly": {
          "$ref": "#/$defs/assembly"
        },
        "AssemblyQualifiedName": {
          "$ref": "#/$defs/string"
        },
        "Attributes": {
          "$ref": "#/$defs/typeAttributes"
        },
        "BaseType": {
          "$ref": "#/$defs/type"
        },
        "ContainsGenericParameters": {
          "$ref": "#/$defs/boolean"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DeclaringMethod": {
          "$ref": "#/$defs/methodBase"
        },
        "DeclaringType": {
          "$ref": "#/$defs/type"
        },
        "FullName": {
          "$ref": "#/$defs/string"
        },
        "GenericParameterAttributes": {
          "$ref": "#/$defs/genericParameterAttributes"
        },
        "GenericParameterPosition": {
          "$ref": "#/$defs/integer"
        },
        "GenericTypeArguments": {
          "$ref": "#/$defs/arrayOfType"
        },
        "GUID": {
          "$ref": "#/$defs/guid"
        },
        "HasElementType": {
          "$ref": "#/$defs/boolean"
        },
        "IsAbstract": {
          "$ref": "#/$defs/boolean"
        },
        "IsAnsiClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsAutoClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsAutoLayout": {
          "$ref": "#/$defs/boolean"
        },
        "IsByRef": {
          "$ref": "#/$defs/boolean"
        },
        "IsByRefLike": {
          "$ref": "#/$defs/boolean"
        },
        "IsClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "IsCOMObject": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructedGenericType": {
          "$ref": "#/$defs/boolean"
        },
        "IsContextful": {
          "$ref": "#/$defs/boolean"
        },
        "IsEnum": {
          "$ref": "#/$defs/boolean"
        },
        "IsExplicitLayout": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethodParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericType": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericTypeDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericTypeParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsImport": {
          "$ref": "#/$defs/boolean"
        },
        "IsInterface": {
          "$ref": "#/$defs/boolean"
        },
        "IsLayoutSequential": {
          "$ref": "#/$defs/boolean"
        },
        "IsMarshalByRef": {
          "$ref": "#/$defs/boolean"
        },
        "IsNested": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamANDAssem": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamily": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamORAssem": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedPrivate": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsNotPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsPointer": {
          "$ref": "#/$defs/boolean"
        },
        "IsPrimitive": {
          "$ref": "#/$defs/boolean"
        },
        "IsPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsSealed": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecuritySafeCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityTransparent": {
          "$ref": "#/$defs/boolean"
        },
        "IsSerializable": {
          "$ref": "#/$defs/boolean"
        },
        "IsSignatureType": {
          "$ref": "#/$defs/boolean"
        },
        "IsSpecialName": {
          "$ref": "#/$defs/boolean"
        },
        "IsSZArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsTypeDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsUnicodeClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsValueType": {
          "$ref": "#/$defs/boolean"
        },
        "IsVariableBoundArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsVisible": {
          "$ref": "#/$defs/boolean"
        },
        "MemberType": {
          "$ref": "#/$defs/memberTypes"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "Module": {
          "$ref": "#/$defs/module"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "Namespace": {
          "$ref": "#/$defs/string"
        },
        "ReflectedType": {
          "$ref": "#/$defs/type"
        },
        "StructLayoutAttribute": {
          "$ref": "#/$defs/structLayoutAttribute"
        },
        "TypeHandle": {
          "$ref": "#/$defs/runtimeTypeHandle"
        },
        "TypeInitializer": {
          "$ref": "#/$defs/constructorInfo"
        },
        "UnderlyingSystemType": {
          "$ref": "#/$defs/type"
        }
      },
      "readOnly": true
    },
    "type1": {
      "type": "object",
      "properties": {
        "Assembly": {
          "$ref": "#/$defs/assembly"
        },
        "AssemblyQualifiedName": {
          "$ref": "#/$defs/string"
        },
        "Attributes": {
          "$ref": "#/$defs/typeAttributes"
        },
        "BaseType": {
          "$ref": "#/$defs/type"
        },
        "ContainsGenericParameters": {
          "$ref": "#/$defs/boolean"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DeclaringMethod": {
          "$ref": "#/$defs/methodBase"
        },
        "DeclaringType": {
          "$ref": "#/$defs/type"
        },
        "FullName": {
          "$ref": "#/$defs/string"
        },
        "GenericParameterAttributes": {
          "$ref": "#/$defs/genericParameterAttributes"
        },
        "GenericParameterPosition": {
          "$ref": "#/$defs/integer"
        },
        "GenericTypeArguments": {
          "$ref": "#/$defs/arrayOfType"
        },
        "GUID": {
          "$ref": "#/$defs/guid"
        },
        "HasElementType": {
          "$ref": "#/$defs/boolean"
        },
        "IsAbstract": {
          "$ref": "#/$defs/boolean"
        },
        "IsAnsiClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsAutoClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsAutoLayout": {
          "$ref": "#/$defs/boolean"
        },
        "IsByRef": {
          "$ref": "#/$defs/boolean"
        },
        "IsByRefLike": {
          "$ref": "#/$defs/boolean"
        },
        "IsClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "IsCOMObject": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructedGenericType": {
          "$ref": "#/$defs/boolean"
        },
        "IsContextful": {
          "$ref": "#/$defs/boolean"
        },
        "IsEnum": {
          "$ref": "#/$defs/boolean"
        },
        "IsExplicitLayout": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethodParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericType": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericTypeDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericTypeParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsImport": {
          "$ref": "#/$defs/boolean"
        },
        "IsInterface": {
          "$ref": "#/$defs/boolean"
        },
        "IsLayoutSequential": {
          "$ref": "#/$defs/boolean"
        },
        "IsMarshalByRef": {
          "$ref": "#/$defs/boolean"
        },
        "IsNested": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamANDAssem": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamily": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamORAssem": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedPrivate": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsNotPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsPointer": {
          "$ref": "#/$defs/boolean"
        },
        "IsPrimitive": {
          "$ref": "#/$defs/boolean"
        },
        "IsPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsSealed": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecuritySafeCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityTransparent": {
          "$ref": "#/$defs/boolean"
        },
        "IsSerializable": {
          "$ref": "#/$defs/boolean"
        },
        "IsSignatureType": {
          "$ref": "#/$defs/boolean"
        },
        "IsSpecialName": {
          "$ref": "#/$defs/boolean"
        },
        "IsSZArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsTypeDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsUnicodeClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsValueType": {
          "$ref": "#/$defs/boolean"
        },
        "IsVariableBoundArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsVisible": {
          "$ref": "#/$defs/boolean"
        },
        "MemberType": {
          "$ref": "#/$defs/memberTypes"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "Module": {
          "$ref": "#/$defs/module"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "Namespace": {
          "$ref": "#/$defs/string"
        },
        "ReflectedType": {
          "$ref": "#/$defs/type"
        },
        "StructLayoutAttribute": {
          "$ref": "#/$defs/structLayoutAttribute"
        },
        "TypeHandle": {
          "$ref": "#/$defs/runtimeTypeHandle"
        },
        "TypeInitializer": {
          "$ref": "#/$defs/constructorInfo"
        },
        "UnderlyingSystemType": {
          "$ref": "#/$defs/type"
        }
      }
    },
    "assembly": {
      "type": "object",
      "properties": {
        "CodeBase": {
          "$ref": "#/$defs/string"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DefinedTypes": {
          "$ref": "#/$defs/arrayOfTypeInfo"
        },
        "EntryPoint": {
          "$ref": "#/$defs/methodInfo"
        },
        "EscapedCodeBase": {
          "$ref": "#/$defs/string"
        },
        "ExportedTypes": {
          "$ref": "#/$defs/arrayOfType1"
        },
        "FullName": {
          "$ref": "#/$defs/string"
        },
        "GlobalAssemblyCache": {
          "$ref": "#/$defs/boolean1"
        },
        "HostContext": {
          "$ref": "#/$defs/integer1"
        },
        "ImageRuntimeVersion": {
          "$ref": "#/$defs/string"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "IsDynamic": {
          "$ref": "#/$defs/boolean"
        },
        "IsFullyTrusted": {
          "$ref": "#/$defs/boolean"
        },
        "Location": {
          "$ref": "#/$defs/string"
        },
        "ManifestModule": {
          "$ref": "#/$defs/module"
        },
        "Modules": {
          "$ref": "#/$defs/arrayOfModule"
        },
        "ReflectionOnly": {
          "$ref": "#/$defs/boolean"
        },
        "SecurityRuleSet": {
          "$ref": "#/$defs/securityRuleSet"
        }
      },
      "readOnly": true
    },
    "assembly1": {
      "type": "object",
      "properties": {
        "CodeBase": {
          "$ref": "#/$defs/string"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DefinedTypes": {
          "$ref": "#/$defs/arrayOfTypeInfo"
        },
        "EntryPoint": {
          "$ref": "#/$defs/methodInfo"
        },
        "EscapedCodeBase": {
          "$ref": "#/$defs/string"
        },
        "ExportedTypes": {
          "$ref": "#/$defs/arrayOfType1"
        },
        "FullName": {
          "$ref": "#/$defs/string"
        },
        "GlobalAssemblyCache": {
          "$ref": "#/$defs/boolean1"
        },
        "HostContext": {
          "$ref": "#/$defs/integer1"
        },
        "ImageRuntimeVersion": {
          "$ref": "#/$defs/string"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "IsDynamic": {
          "$ref": "#/$defs/boolean"
        },
        "IsFullyTrusted": {
          "$ref": "#/$defs/boolean"
        },
        "Location": {
          "$ref": "#/$defs/string"
        },
        "ManifestModule": {
          "$ref": "#/$defs/module"
        },
        "Modules": {
          "$ref": "#/$defs/arrayOfModule"
        },
        "ReflectionOnly": {
          "$ref": "#/$defs/boolean"
        },
        "SecurityRuleSet": {
          "$ref": "#/$defs/securityRuleSet"
        }
      }
    },
    "string": {
      "type": "string",
      "readOnly": true
    },
    "arrayOfTypeInfo": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "Assembly": {
            "$ref": "#/$defs/assembly"
          },
          "AssemblyQualifiedName": {
            "$ref": "#/$defs/string"
          },
          "Attributes": {
            "$ref": "#/$defs/typeAttributes"
          },
          "BaseType": {
            "$ref": "#/$defs/type"
          },
          "ContainsGenericParameters": {
            "$ref": "#/$defs/boolean"
          },
          "CustomAttributes": {
            "$ref": "#/$defs/arrayOfCustomAttributeData"
          },
          "DeclaredConstructors": {
            "$ref": "#/$defs/arrayOfConstructorInfo"
          },
          "DeclaredEvents": {
            "$ref": "#/$defs/arrayOfEventInfo"
          },
          "DeclaredFields": {
            "$ref": "#/$defs/arrayOfFieldInfo"
          },
          "DeclaredMembers": {
            "$ref": "#/$defs/arrayOfMemberInfo"
          },
          "DeclaredMethods": {
            "$ref": "#/$defs/arrayOfMethodInfo"
          },
          "DeclaredNestedTypes": {
            "$ref": "#/$defs/arrayOfTypeInfo"
          },
          "DeclaredProperties": {
            "$ref": "#/$defs/arrayOfPropertyInfo"
          },
          "DeclaringMethod": {
            "$ref": "#/$defs/methodBase"
          },
          "DeclaringType": {
            "$ref": "#/$defs/type"
          },
          "FullName": {
            "$ref": "#/$defs/string"
          },
          "GenericParameterAttributes": {
            "$ref": "#/$defs/genericParameterAttributes"
          },
          "GenericParameterPosition": {
            "$ref": "#/$defs/integer"
          },
          "GenericTypeArguments": {
            "$ref": "#/$defs/arrayOfType"
          },
          "GenericTypeParameters": {
            "$ref": "#/$defs/arrayOfType"
          },
          "GUID": {
            "$ref": "#/$defs/guid"
          },
          "HasElementType": {
            "$ref": "#/$defs/boolean"
          },
          "ImplementedInterfaces": {
            "$ref": "#/$defs/arrayOfType1"
          },
          "IsAbstract": {
            "$ref": "#/$defs/boolean"
          },
          "IsAnsiClass": {
            "$ref": "#/$defs/boolean"
          },
          "IsArray": {
            "$ref": "#/$defs/boolean"
          },
          "IsAutoClass": {
            "$ref": "#/$defs/boolean"
          },
          "IsAutoLayout": {
            "$ref": "#/$defs/boolean"
          },
          "IsByRef": {
            "$ref": "#/$defs/boolean"
          },
          "IsByRefLike": {
            "$ref": "#/$defs/boolean"
          },
          "IsClass": {
            "$ref": "#/$defs/boolean"
          },
          "IsCollectible": {
            "$ref": "#/$defs/boolean"
          },
          "IsCOMObject": {
            "$ref": "#/$defs/boolean"
          },
          "IsConstructedGenericType": {
            "$ref": "#/$defs/boolean"
          },
          "IsContextful": {
            "$ref": "#/$defs/boolean"
          },
          "IsEnum": {
            "$ref": "#/$defs/boolean"
          },
          "IsExplicitLayout": {
            "$ref": "#/$defs/boolean"
          },
          "IsGenericMethodParameter": {
            "$ref": "#/$defs/boolean"
          },
          "IsGenericParameter": {
            "$ref": "#/$defs/boolean"
          },
          "IsGenericType": {
            "$ref": "#/$defs/boolean"
          },
          "IsGenericTypeDefinition": {
            "$ref": "#/$defs/boolean"
          },
          "IsGenericTypeParameter": {
            "$ref": "#/$defs/boolean"
          },
          "IsImport": {
            "$ref": "#/$defs/boolean"
          },
          "IsInterface": {
            "$ref": "#/$defs/boolean"
          },
          "IsLayoutSequential": {
            "$ref": "#/$defs/boolean"
          },
          "IsMarshalByRef": {
            "$ref": "#/$defs/boolean"
          },
          "IsNested": {
            "$ref": "#/$defs/boolean"
          },
          "IsNestedAssembly": {
            "$ref": "#/$defs/boolean"
          },
          "IsNestedFamANDAssem": {
            "$ref": "#/$defs/boolean"
          },
          "IsNestedFamily": {
            "$ref": "#/$defs/boolean"
          },
          "IsNestedFamORAssem": {
            "$ref": "#/$defs/boolean"
          },
          "IsNestedPrivate": {
            "$ref": "#/$defs/boolean"
          },
          "IsNestedPublic": {
            "$ref": "#/$defs/boolean"
          },
          "IsNotPublic": {
            "$ref": "#/$defs/boolean"
          },
          "IsPointer": {
            "$ref": "#/$defs/boolean"
          },
          "IsPrimitive": {
            "$ref": "#/$defs/boolean"
          },
          "IsPublic": {
            "$ref": "#/$defs/boolean"
          },
          "IsSealed": {
            "$ref": "#/$defs/boolean"
          },
          "IsSecurityCritical": {
            "$ref": "#/$defs/boolean"
          },
          "IsSecuritySafeCritical": {
            "$ref": "#/$defs/boolean"
          },
          "IsSecurityTransparent": {
            "$ref": "#/$defs/boolean"
          },
          "IsSerializable": {
            "$ref": "#/$defs/boolean"
          },
          "IsSignatureType": {
            "$ref": "#/$defs/boolean"
          },
          "IsSpecialName": {
            "$ref": "#/$defs/boolean"
          },
          "IsSZArray": {
            "$ref": "#/$defs/boolean"
          },
          "IsTypeDefinition": {
            "$ref": "#/$defs/boolean"
          },
          "IsUnicodeClass": {
            "$ref": "#/$defs/boolean"
          },
          "IsValueType": {
            "$ref": "#/$defs/boolean"
          },
          "IsVariableBoundArray": {
            "$ref": "#/$defs/boolean"
          },
          "IsVisible": {
            "$ref": "#/$defs/boolean"
          },
          "MemberType": {
            "$ref": "#/$defs/memberTypes"
          },
          "MetadataToken": {
            "$ref": "#/$defs/integer"
          },
          "Module": {
            "$ref": "#/$defs/module"
          },
          "Name": {
            "$ref": "#/$defs/string"
          },
          "Namespace": {
            "$ref": "#/$defs/string"
          },
          "ReflectedType": {
            "$ref": "#/$defs/type"
          },
          "StructLayoutAttribute": {
            "$ref": "#/$defs/structLayoutAttribute"
          },
          "TypeHandle": {
            "$ref": "#/$defs/runtimeTypeHandle"
          },
          "TypeInitializer": {
            "$ref": "#/$defs/constructorInfo"
          },
          "UnderlyingSystemType": {
            "$ref": "#/$defs/type"
          }
        },
        "readOnly": true
      },
      "readOnly": true
    },
    "typeAttributes": {
      "enum": [
        "NotPublic",
        "AutoLayout",
        "AnsiClass",
        "Class",
        "Public",
        "NestedPublic",
        "NestedPrivate",
        "NestedFamily",
        "NestedAssembly",
        "NestedFamANDAssem",
        "NestedFamORAssem",
        "VisibilityMask",
        "SequentialLayout",
        "ExplicitLayout",
        "LayoutMask",
        "Interface",
        "ClassSemanticsMask",
        "Abstract",
        "Sealed",
        "SpecialName",
        "RTSpecialName",
        "Import",
        "Serializable",
        "WindowsRuntime",
        "UnicodeClass",
        "AutoClass",
        "CustomFormatClass",
        "StringFormatMask",
        "HasSecurity",
        "ReservedMask",
        "BeforeFieldInit",
        "CustomFormatMask"
      ],
      "readOnly": true
    },
    "arrayOfConstructorInfo": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/constructorInfo"
      },
      "readOnly": true
    },
    "memberTypes": {
      "enum": [
        "Constructor",
        "Event",
        "Field",
        "Method",
        "Property",
        "TypeInfo",
        "Custom",
        "NestedType",
        "All"
      ],
      "readOnly": true
    },
    "integer": {
      "type": "integer",
      "readOnly": true
    },
    "runtimeMethodHandle": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/$defs/intPtr"
        }
      },
      "readOnly": true
    },
    "intPtr": {
      "type": "object",
      "readOnly": true
    },
    "methodImplAttributes": {
      "enum": [
        "IL",
        "Managed",
        "Native",
        "OPTIL",
        "Runtime",
        "CodeTypeMask",
        "Unmanaged",
        "ManagedMask",
        "NoInlining",
        "ForwardRef",
        "Synchronized",
        "NoOptimization",
        "PreserveSig",
        "AggressiveInlining",
        "AggressiveOptimization",
        "InternalCall",
        "MaxMethodImplVal"
      ],
      "readOnly": true
    },
    "module": {
      "type": "object",
      "properties": {
        "Assembly": {
          "$ref": "#/$defs/assembly"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "FullyQualifiedName": {
          "$ref": "#/$defs/string"
        },
        "MDStreamVersion": {
          "$ref": "#/$defs/integer"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "ModuleHandle": {
          "$ref": "#/$defs/moduleHandle"
        },
        "ModuleVersionId": {
          "$ref": "#/$defs/guid"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "ScopeName": {
          "$ref": "#/$defs/string"
        }
      },
      "readOnly": true
    },
    "moduleHandle": {
      "type": "object",
      "properties": {
        "MDStreamVersion": {
          "$ref": "#/$defs/integer"
        }
      },
      "readOnly": true
    },
    "guid": {
      "type": "string",
      "format": "uuid",
      "readOnly": true
    },
    "constructorInfo": {
      "type": "object",
      "properties": {
        "Attributes": {
          "$ref": "#/$defs/methodAttributes"
        },
        "CallingConvention": {
          "$ref": "#/$defs/callingConventions"
        },
        "ContainsGenericParameters": {
          "$ref": "#/$defs/boolean"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DeclaringType": {
          "$ref": "#/$defs/type"
        },
        "IsAbstract": {
          "$ref": "#/$defs/boolean"
        },
        "IsAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructedGenericMethod": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructor": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamily": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamilyAndAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamilyOrAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsFinal": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethod": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethodDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsHideBySig": {
          "$ref": "#/$defs/boolean"
        },
        "IsPrivate": {
          "$ref": "#/$defs/boolean"
        },
        "IsPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecuritySafeCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityTransparent": {
          "$ref": "#/$defs/boolean"
        },
        "IsSpecialName": {
          "$ref": "#/$defs/boolean"
        },
        "IsStatic": {
          "$ref": "#/$defs/boolean"
        },
        "IsVirtual": {
          "$ref": "#/$defs/boolean"
        },
        "MemberType": {
          "$ref": "#/$defs/memberTypes"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "MethodHandle": {
          "$ref": "#/$defs/runtimeMethodHandle"
        },
        "MethodImplementationFlags": {
          "$ref": "#/$defs/methodImplAttributes"
        },
        "Module": {
          "$ref": "#/$defs/module"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "ReflectedType": {
          "$ref": "#/$defs/type"
        }
      },
      "readOnly": true
    },
    "arrayOfEventInfo": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "AddMethod": {
            "$ref": "#/$defs/methodInfo"
          },
          "Attributes": {
            "$ref": "#/$defs/eventAttributes"
          },
          "CustomAttributes": {
            "$ref": "#/$defs/arrayOfCustomAttributeData"
          },
          "DeclaringType": {
            "$ref": "#/$defs/type"
          },
          "EventHandlerType": {
            "$ref": "#/$defs/type"
          },
          "IsCollectible": {
            "$ref": "#/$defs/boolean"
          },
          "IsMulticast": {
            "$ref": "#/$defs/boolean"
          },
          "IsSpecialName": {
            "$ref": "#/$defs/boolean"
          },
          "MemberType": {
            "$ref": "#/$defs/memberTypes"
          },
          "MetadataToken": {
            "$ref": "#/$defs/integer"
          },
          "Module": {
            "$ref": "#/$defs/module"
          },
          "Name": {
            "$ref": "#/$defs/string"
          },
          "RaiseMethod": {
            "$ref": "#/$defs/methodInfo"
          },
          "ReflectedType": {
            "$ref": "#/$defs/type"
          },
          "RemoveMethod": {
            "$ref": "#/$defs/methodInfo"
          }
        },
        "readOnly": true
      },
      "readOnly": true
    },
    "eventAttributes": {
      "enum": [
        "None",
        "SpecialName",
        "RTSpecialName",
        "ReservedMask"
      ],
      "readOnly": true
    },
    "arrayOfFieldInfo": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "Attributes": {
            "$ref": "#/$defs/fieldAttributes"
          },
          "CustomAttributes": {
            "$ref": "#/$defs/arrayOfCustomAttributeData"
          },
          "DeclaringType": {
            "$ref": "#/$defs/type"
          },
          "FieldHandle": {
            "$ref": "#/$defs/runtimeFieldHandle"
          },
          "FieldType": {
            "$ref": "#/$defs/type"
          },
          "IsAssembly": {
            "$ref": "#/$defs/boolean"
          },
          "IsCollectible": {
            "$ref": "#/$defs/boolean"
          },
          "IsFamily": {
            "$ref": "#/$defs/boolean"
          },
          "IsFamilyAndAssembly": {
            "$ref": "#/$defs/boolean"
          },
          "IsFamilyOrAssembly": {
            "$ref": "#/$defs/boolean"
          },
          "IsInitOnly": {
            "$ref": "#/$defs/boolean"
          },
          "IsLiteral": {
            "$ref": "#/$defs/boolean"
          },
          "IsNotSerialized": {
            "$ref": "#/$defs/boolean"
          },
          "IsPinvokeImpl": {
            "$ref": "#/$defs/boolean"
          },
          "IsPrivate": {
            "$ref": "#/$defs/boolean"
          },
          "IsPublic": {
            "$ref": "#/$defs/boolean"
          },
          "IsSecurityCritical": {
            "$ref": "#/$defs/boolean"
          },
          "IsSecuritySafeCritical": {
            "$ref": "#/$defs/boolean"
          },
          "IsSecurityTransparent": {
            "$ref": "#/$defs/boolean"
          },
          "IsSpecialName": {
            "$ref": "#/$defs/boolean"
          },
          "IsStatic": {
            "$ref": "#/$defs/boolean"
          },
          "MemberType": {
            "$ref": "#/$defs/memberTypes"
          },
          "MetadataToken": {
            "$ref": "#/$defs/integer"
          },
          "Module": {
            "$ref": "#/$defs/module"
          },
          "Name": {
            "$ref": "#/$defs/string"
          },
          "ReflectedType": {
            "$ref": "#/$defs/type"
          }
        },
        "readOnly": true
      },
      "readOnly": true
    },
    "fieldAttributes": {
      "enum": [
        "PrivateScope",
        "Private",
        "FamANDAssem",
        "Assembly",
        "Family",
        "FamORAssem",
        "Public",
        "FieldAccessMask",
        "Static",
        "InitOnly",
        "Literal",
        "NotSerialized",
        "HasFieldRVA",
        "SpecialName",
        "RTSpecialName",
        "HasFieldMarshal",
        "PinvokeImpl",
        "HasDefault",
        "ReservedMask"
      ],
      "readOnly": true
    },
    "runtimeFieldHandle": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/$defs/intPtr"
        }
      },
      "readOnly": true
    },
    "arrayOfMemberInfo": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/memberInfo"
      },
      "readOnly": true
    },
    "memberInfo": {
      "type": "object",
      "properties": {
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DeclaringType": {
          "$ref": "#/$defs/type"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "MemberType": {
          "$ref": "#/$defs/memberTypes"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "Module": {
          "$ref": "#/$defs/module"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "ReflectedType": {
          "$ref": "#/$defs/type"
        }
      },
      "readOnly": true
    },
    "arrayOfMethodInfo": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/methodInfo"
      },
      "readOnly": true
    },
    "arrayOfPropertyInfo": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "Attributes": {
            "$ref": "#/$defs/propertyAttributes"
          },
          "CanRead": {
            "$ref": "#/$defs/boolean"
          },
          "CanWrite": {
            "$ref": "#/$defs/boolean"
          },
          "CustomAttributes": {
            "$ref": "#/$defs/arrayOfCustomAttributeData"
          },
          "DeclaringType": {
            "$ref": "#/$defs/type"
          },
          "GetMethod": {
            "$ref": "#/$defs/methodInfo"
          },
          "IsCollectible": {
            "$ref": "#/$defs/boolean"
          },
          "IsSpecialName": {
            "$ref": "#/$defs/boolean"
          },
          "MemberType": {
            "$ref": "#/$defs/memberTypes"
          },
          "MetadataToken": {
            "$ref": "#/$defs/integer"
          },
          "Module": {
            "$ref": "#/$defs/module"
          },
          "Name": {
            "$ref": "#/$defs/string"
          },
          "PropertyType": {
            "$ref": "#/$defs/type"
          },
          "ReflectedType": {
            "$ref": "#/$defs/type"
          },
          "SetMethod": {
            "$ref": "#/$defs/methodInfo"
          }
        },
        "readOnly": true
      },
      "readOnly": true
    },
    "propertyAttributes": {
      "enum": [
        "None",
        "SpecialName",
        "RTSpecialName",
        "HasDefault",
        "Reserved2",
        "Reserved3",
        "Reserved4",
        "ReservedMask"
      ],
      "readOnly": true
    },
    "methodBase": {
      "type": "object",
      "properties": {
        "Attributes": {
          "$ref": "#/$defs/methodAttributes"
        },
        "CallingConvention": {
          "$ref": "#/$defs/callingConventions"
        },
        "ContainsGenericParameters": {
          "$ref": "#/$defs/boolean"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DeclaringType": {
          "$ref": "#/$defs/type"
        },
        "IsAbstract": {
          "$ref": "#/$defs/boolean"
        },
        "IsAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructedGenericMethod": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructor": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamily": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamilyAndAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsFamilyOrAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsFinal": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethod": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethodDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsHideBySig": {
          "$ref": "#/$defs/boolean"
        },
        "IsPrivate": {
          "$ref": "#/$defs/boolean"
        },
        "IsPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecuritySafeCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityTransparent": {
          "$ref": "#/$defs/boolean"
        },
        "IsSpecialName": {
          "$ref": "#/$defs/boolean"
        },
        "IsStatic": {
          "$ref": "#/$defs/boolean"
        },
        "IsVirtual": {
          "$ref": "#/$defs/boolean"
        },
        "MemberType": {
          "$ref": "#/$defs/memberTypes"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "MethodHandle": {
          "$ref": "#/$defs/runtimeMethodHandle"
        },
        "MethodImplementationFlags": {
          "$ref": "#/$defs/methodImplAttributes"
        },
        "Module": {
          "$ref": "#/$defs/module"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "ReflectedType": {
          "$ref": "#/$defs/type"
        }
      },
      "readOnly": true
    },
    "genericParameterAttributes": {
      "enum": [
        "None",
        "Covariant",
        "Contravariant",
        "VarianceMask",
        "ReferenceTypeConstraint",
        "NotNullableValueTypeConstraint",
        "DefaultConstructorConstraint",
        "SpecialConstraintMask"
      ],
      "readOnly": true
    },
    "arrayOfType": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/type"
      },
      "readOnly": true
    },
    "arrayOfType1": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/type"
      },
      "readOnly": true
    },
    "structLayoutAttribute": {
      "type": "object",
      "properties": {
        "CharSet": {
          "enum": [
            "None",
            "Ansi",
            "Unicode",
            "Auto"
          ]
        },
        "Pack": {
          "type": "integer"
        },
        "Size": {
          "type": "integer"
        },
        "TypeId": {
          "readOnly": true
        },
        "Value": {
          "$ref": "#/$defs/layoutKind"
        }
      },
      "readOnly": true
    },
    "layoutKind": {
      "enum": [
        "Sequential",
        "Explicit",
        "Auto"
      ],
      "readOnly": true
    },
    "runtimeTypeHandle": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/$defs/intPtr"
        }
      },
      "readOnly": true
    },
    "boolean1": {
      "type": "boolean",
      "readOnly": true,
      "deprecated": true
    },
    "integer1": {
      "type": "integer",
      "readOnly": true
    },
    "arrayOfModule": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/module"
      },
      "readOnly": true
    },
    "securityRuleSet": {
      "enum": [
        "None",
        "Level1",
        "Level2"
      ],
      "readOnly": true
    },
    "iListOfCustomAttributeTypedArgument": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/customAttributeTypedArgument"
      },
      "readOnly": true
    },
    "customAttributeTypedArgument": {
      "type": "object",
      "properties": {
        "ArgumentType": {
          "$ref": "#/$defs/type"
        },
        "Value": {
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "iListOfCustomAttributeNamedArgument": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "IsField": {
            "$ref": "#/$defs/boolean"
          },
          "MemberInfo": {
            "$ref": "#/$defs/memberInfo"
          },
          "MemberName": {
            "$ref": "#/$defs/string"
          },
          "TypedValue": {
            "$ref": "#/$defs/customAttributeTypedArgument"
          }
        },
        "readOnly": true
      },
      "readOnly": true
    },
    "parameterInfo": {
      "type": "object",
      "properties": {
        "Attributes": {
          "$ref": "#/$defs/parameterAttributes"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DefaultValue": {
          "readOnly": true
        },
        "HasDefaultValue": {
          "$ref": "#/$defs/boolean"
        },
        "IsIn": {
          "$ref": "#/$defs/boolean"
        },
        "IsLcid": {
          "$ref": "#/$defs/boolean"
        },
        "IsOptional": {
          "$ref": "#/$defs/boolean"
        },
        "IsOut": {
          "$ref": "#/$defs/boolean"
        },
        "IsRetval": {
          "$ref": "#/$defs/boolean"
        },
        "Member": {
          "$ref": "#/$defs/memberInfo"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "ParameterType": {
          "$ref": "#/$defs/type"
        },
        "Position": {
          "$ref": "#/$defs/integer"
        },
        "RawDefaultValue": {
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "parameterAttributes": {
      "enum": [
        "None",
        "In",
        "Out",
        "Lcid",
        "Retval",
        "Optional",
        "HasDefault",
        "HasFieldMarshal",
        "Reserved3",
        "Reserved4",
        "ReservedMask"
      ],
      "readOnly": true
    },
    "iCustomAttributeProvider": {
      "type": "object",
      "readOnly": true
    },
    "iListOfString": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "string1": {
      "type": "string",
      "description": "The virtual base path that the specific file provider handles",
      "readOnly": true
    },
    "contentProviderBuilder": {
      "description": "Used to configure and build up \u003Csee cref=\u0022T:EPiServer.Core.ContentProvider\u0022 /\u003E instances\r\non the \u003Csee cref=\u0022T:EPiServer.Core.ContentOptions\u0022 /\u003E class.",
      "type": "object",
      "properties": {
        "AutoCorrectInvalidName": {
          "type": "boolean",
          "description": "Unsupported INTERNAL API! Not covered by semantic versioning; might change without notice. Gets or sets if an invalid provider name should be automatically corrected or if an exception should be thrown."
        },
        "Name": {
          "type": "string",
          "description": "Gets the name of the \u003Csee cref=\u0022T:EPiServer.Core.ContentProvider\u0022 /\u003E.",
          "readOnly": true
        },
        "ProviderType": {
          "type": "object",
          "properties": {
            "Assembly": {
              "$ref": "#/$defs/assembly"
            },
            "AssemblyQualifiedName": {
              "$ref": "#/$defs/string"
            },
            "Attributes": {
              "$ref": "#/$defs/typeAttributes"
            },
            "BaseType": {
              "$ref": "#/$defs/type"
            },
            "ContainsGenericParameters": {
              "$ref": "#/$defs/boolean"
            },
            "CustomAttributes": {
              "$ref": "#/$defs/arrayOfCustomAttributeData"
            },
            "DeclaringMethod": {
              "$ref": "#/$defs/methodBase"
            },
            "DeclaringType": {
              "$ref": "#/$defs/type"
            },
            "FullName": {
              "$ref": "#/$defs/string"
            },
            "GenericParameterAttributes": {
              "$ref": "#/$defs/genericParameterAttributes"
            },
            "GenericParameterPosition": {
              "$ref": "#/$defs/integer"
            },
            "GenericTypeArguments": {
              "$ref": "#/$defs/arrayOfType"
            },
            "GUID": {
              "$ref": "#/$defs/guid"
            },
            "HasElementType": {
              "$ref": "#/$defs/boolean"
            },
            "IsAbstract": {
              "$ref": "#/$defs/boolean"
            },
            "IsAnsiClass": {
              "$ref": "#/$defs/boolean"
            },
            "IsArray": {
              "$ref": "#/$defs/boolean"
            },
            "IsAutoClass": {
              "$ref": "#/$defs/boolean"
            },
            "IsAutoLayout": {
              "$ref": "#/$defs/boolean"
            },
            "IsByRef": {
              "$ref": "#/$defs/boolean"
            },
            "IsByRefLike": {
              "$ref": "#/$defs/boolean"
            },
            "IsClass": {
              "$ref": "#/$defs/boolean"
            },
            "IsCollectible": {
              "$ref": "#/$defs/boolean"
            },
            "IsCOMObject": {
              "$ref": "#/$defs/boolean"
            },
            "IsConstructedGenericType": {
              "$ref": "#/$defs/boolean"
            },
            "IsContextful": {
              "$ref": "#/$defs/boolean"
            },
            "IsEnum": {
              "$ref": "#/$defs/boolean"
            },
            "IsExplicitLayout": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericMethodParameter": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericParameter": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericType": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericTypeDefinition": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericTypeParameter": {
              "$ref": "#/$defs/boolean"
            },
            "IsImport": {
              "$ref": "#/$defs/boolean"
            },
            "IsInterface": {
              "$ref": "#/$defs/boolean"
            },
            "IsLayoutSequential": {
              "$ref": "#/$defs/boolean"
            },
            "IsMarshalByRef": {
              "$ref": "#/$defs/boolean"
            },
            "IsNested": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedAssembly": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedFamANDAssem": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedFamily": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedFamORAssem": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedPrivate": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedPublic": {
              "$ref": "#/$defs/boolean"
            },
            "IsNotPublic": {
              "$ref": "#/$defs/boolean"
            },
            "IsPointer": {
              "$ref": "#/$defs/boolean"
            },
            "IsPrimitive": {
              "$ref": "#/$defs/boolean"
            },
            "IsPublic": {
              "$ref": "#/$defs/boolean"
            },
            "IsSealed": {
              "$ref": "#/$defs/boolean"
            },
            "IsSecurityCritical": {
              "$ref": "#/$defs/boolean"
            },
            "IsSecuritySafeCritical": {
              "$ref": "#/$defs/boolean"
            },
            "IsSecurityTransparent": {
              "$ref": "#/$defs/boolean"
            },
            "IsSerializable": {
              "$ref": "#/$defs/boolean"
            },
            "IsSignatureType": {
              "$ref": "#/$defs/boolean"
            },
            "IsSpecialName": {
              "$ref": "#/$defs/boolean"
            },
            "IsSZArray": {
              "$ref": "#/$defs/boolean"
            },
            "IsTypeDefinition": {
              "$ref": "#/$defs/boolean"
            },
            "IsUnicodeClass": {
              "$ref": "#/$defs/boolean"
            },
            "IsValueType": {
              "$ref": "#/$defs/boolean"
            },
            "IsVariableBoundArray": {
              "$ref": "#/$defs/boolean"
            },
            "IsVisible": {
              "$ref": "#/$defs/boolean"
            },
            "MemberType": {
              "$ref": "#/$defs/memberTypes"
            },
            "MetadataToken": {
              "$ref": "#/$defs/integer"
            },
            "Module": {
              "$ref": "#/$defs/module"
            },
            "Name": {
              "$ref": "#/$defs/string"
            },
            "Namespace": {
              "$ref": "#/$defs/string"
            },
            "ReflectedType": {
              "$ref": "#/$defs/type"
            },
            "StructLayoutAttribute": {
              "$ref": "#/$defs/structLayoutAttribute"
            },
            "TypeHandle": {
              "$ref": "#/$defs/runtimeTypeHandle"
            },
            "TypeInitializer": {
              "$ref": "#/$defs/constructorInfo"
            },
            "UnderlyingSystemType": {
              "$ref": "#/$defs/type"
            }
          },
          "description": "Gets the type of the \u003Csee cref=\u0022T:EPiServer.Core.ContentProvider\u0022 /\u003E."
        }
      }
    },
    "string2": {
      "type": "string",
      "description": "Gets or sets the connection string."
    },
    "string3": {
      "type": "string",
      "description": " Gets or sets the name of the connection string."
    },
    "string4": {
      "type": "string",
      "description": "Gets or sets the provider name."
    },
    "iListOfString1": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/string"
      },
      "readOnly": true
    },
    "uri": {
      "type": "string",
      "format": "uri"
    },
    "calendar": {
      "type": "object",
      "properties": {
        "AlgorithmType": {
          "$ref": "#/$defs/calendarAlgorithmType"
        },
        "Eras": {
          "$ref": "#/$defs/arrayOfInteger"
        },
        "IsReadOnly": {
          "$ref": "#/$defs/boolean"
        },
        "MaxSupportedDateTime": {
          "$ref": "#/$defs/dateTime"
        },
        "MinSupportedDateTime": {
          "$ref": "#/$defs/dateTime"
        },
        "TwoDigitYearMax": {
          "type": "integer"
        }
      },
      "readOnly": true
    },
    "calendar1": {
      "type": "object",
      "properties": {
        "AlgorithmType": {
          "$ref": "#/$defs/calendarAlgorithmType"
        },
        "Eras": {
          "$ref": "#/$defs/arrayOfInteger"
        },
        "IsReadOnly": {
          "$ref": "#/$defs/boolean"
        },
        "MaxSupportedDateTime": {
          "$ref": "#/$defs/dateTime"
        },
        "MinSupportedDateTime": {
          "$ref": "#/$defs/dateTime"
        },
        "TwoDigitYearMax": {
          "type": "integer"
        }
      }
    },
    "calendarAlgorithmType": {
      "enum": [
        "Unknown",
        "SolarCalendar",
        "LunarCalendar",
        "LunisolarCalendar"
      ],
      "readOnly": true
    },
    "arrayOfInteger": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/integer"
      },
      "readOnly": true
    },
    "arrayOfInteger1": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "dateTime": {
      "type": "string",
      "format": "date-time",
      "readOnly": true
    },
    "compareInfo": {
      "type": "object",
      "properties": {
        "LCID": {
          "$ref": "#/$defs/integer"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "Version": {
          "$ref": "#/$defs/sortVersion"
        }
      },
      "readOnly": true
    },
    "sortVersion": {
      "type": "object",
      "properties": {
        "FullVersion": {
          "$ref": "#/$defs/integer"
        },
        "SortId": {
          "$ref": "#/$defs/guid"
        }
      },
      "readOnly": true
    },
    "cultureTypes": {
      "enum": [
        "NeutralCultures",
        "SpecificCultures",
        "InstalledWin32Cultures",
        "AllCultures",
        "UserCustomCulture",
        "ReplacementCultures",
        "WindowsOnlyCultures",
        "FrameworkCultures"
      ],
      "readOnly": true
    },
    "dateTimeFormatInfo": {
      "type": "object",
      "properties": {
        "AbbreviatedDayNames": {
          "$ref": "#/$defs/arrayOfString"
        },
        "AbbreviatedMonthGenitiveNames": {
          "$ref": "#/$defs/arrayOfString"
        },
        "AbbreviatedMonthNames": {
          "$ref": "#/$defs/arrayOfString"
        },
        "AMDesignator": {
          "type": "string"
        },
        "Calendar": {
          "$ref": "#/$defs/calendar1"
        },
        "CalendarWeekRule": {
          "enum": [
            "FirstDay",
            "FirstFullWeek",
            "FirstFourDayWeek"
          ]
        },
        "DateSeparator": {
          "type": "string"
        },
        "DayNames": {
          "$ref": "#/$defs/arrayOfString"
        },
        "FirstDayOfWeek": {
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "FullDateTimePattern": {
          "type": "string"
        },
        "IsReadOnly": {
          "$ref": "#/$defs/boolean"
        },
        "LongDatePattern": {
          "type": "string"
        },
        "LongTimePattern": {
          "type": "string"
        },
        "MonthDayPattern": {
          "type": "string"
        },
        "MonthGenitiveNames": {
          "$ref": "#/$defs/arrayOfString"
        },
        "MonthNames": {
          "$ref": "#/$defs/arrayOfString"
        },
        "NativeCalendarName": {
          "$ref": "#/$defs/string"
        },
        "PMDesignator": {
          "type": "string"
        },
        "RFC1123Pattern": {
          "$ref": "#/$defs/string"
        },
        "ShortDatePattern": {
          "type": "string"
        },
        "ShortestDayNames": {
          "$ref": "#/$defs/arrayOfString"
        },
        "ShortTimePattern": {
          "type": "string"
        },
        "SortableDateTimePattern": {
          "$ref": "#/$defs/string"
        },
        "TimeSeparator": {
          "type": "string"
        },
        "UniversalSortableDateTimePattern": {
          "$ref": "#/$defs/string"
        },
        "YearMonthPattern": {
          "type": "string"
        }
      }
    },
    "arrayOfString": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "numberFormatInfo": {
      "type": "object",
      "properties": {
        "CurrencyDecimalDigits": {
          "type": "integer"
        },
        "CurrencyDecimalSeparator": {
          "type": "string"
        },
        "CurrencyGroupSeparator": {
          "type": "string"
        },
        "CurrencyGroupSizes": {
          "$ref": "#/$defs/arrayOfInteger1"
        },
        "CurrencyNegativePattern": {
          "type": "integer"
        },
        "CurrencyPositivePattern": {
          "type": "integer"
        },
        "CurrencySymbol": {
          "type": "string"
        },
        "DigitSubstitution": {
          "enum": [
            "Context",
            "None",
            "NativeNational"
          ]
        },
        "IsReadOnly": {
          "$ref": "#/$defs/boolean"
        },
        "NaNSymbol": {
          "type": "string"
        },
        "NativeDigits": {
          "$ref": "#/$defs/arrayOfString"
        },
        "NegativeInfinitySymbol": {
          "type": "string"
        },
        "NegativeSign": {
          "type": "string"
        },
        "NumberDecimalDigits": {
          "type": "integer"
        },
        "NumberDecimalSeparator": {
          "type": "string"
        },
        "NumberGroupSeparator": {
          "type": "string"
        },
        "NumberGroupSizes": {
          "$ref": "#/$defs/arrayOfInteger1"
        },
        "NumberNegativePattern": {
          "type": "integer"
        },
        "PercentDecimalDigits": {
          "type": "integer"
        },
        "PercentDecimalSeparator": {
          "type": "string"
        },
        "PercentGroupSeparator": {
          "type": "string"
        },
        "PercentGroupSizes": {
          "$ref": "#/$defs/arrayOfInteger1"
        },
        "PercentNegativePattern": {
          "type": "integer"
        },
        "PercentPositivePattern": {
          "type": "integer"
        },
        "PercentSymbol": {
          "type": "string"
        },
        "PerMilleSymbol": {
          "type": "string"
        },
        "PositiveInfinitySymbol": {
          "type": "string"
        },
        "PositiveSign": {
          "type": "string"
        }
      }
    },
    "arrayOfCalendar": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/calendar"
      },
      "readOnly": true
    },
    "cultureInfo": {
      "type": "object",
      "properties": {
        "Calendar": {
          "$ref": "#/$defs/calendar"
        },
        "CompareInfo": {
          "$ref": "#/$defs/compareInfo"
        },
        "CultureTypes": {
          "$ref": "#/$defs/cultureTypes"
        },
        "DateTimeFormat": {
          "$ref": "#/$defs/dateTimeFormatInfo"
        },
        "DisplayName": {
          "$ref": "#/$defs/string"
        },
        "EnglishName": {
          "$ref": "#/$defs/string"
        },
        "IetfLanguageTag": {
          "$ref": "#/$defs/string"
        },
        "IsNeutralCulture": {
          "$ref": "#/$defs/boolean"
        },
        "IsReadOnly": {
          "$ref": "#/$defs/boolean"
        },
        "KeyboardLayoutId": {
          "$ref": "#/$defs/integer"
        },
        "LCID": {
          "$ref": "#/$defs/integer"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "NativeName": {
          "$ref": "#/$defs/string"
        },
        "NumberFormat": {
          "$ref": "#/$defs/numberFormatInfo"
        },
        "OptionalCalendars": {
          "$ref": "#/$defs/arrayOfCalendar"
        },
        "Parent": {
          "$ref": "#/$defs/cultureInfo"
        },
        "TextInfo": {
          "$ref": "#/$defs/textInfo"
        },
        "ThreeLetterISOLanguageName": {
          "$ref": "#/$defs/string"
        },
        "ThreeLetterWindowsLanguageName": {
          "$ref": "#/$defs/string"
        },
        "TwoLetterISOLanguageName": {
          "$ref": "#/$defs/string"
        },
        "UseUserOverride": {
          "$ref": "#/$defs/boolean"
        }
      },
      "readOnly": true
    },
    "textInfo": {
      "type": "object",
      "properties": {
        "ANSICodePage": {
          "$ref": "#/$defs/integer"
        },
        "CultureName": {
          "$ref": "#/$defs/string"
        },
        "EBCDICCodePage": {
          "$ref": "#/$defs/integer"
        },
        "IsReadOnly": {
          "$ref": "#/$defs/boolean"
        },
        "IsRightToLeft": {
          "$ref": "#/$defs/boolean"
        },
        "LCID": {
          "$ref": "#/$defs/integer"
        },
        "ListSeparator": {
          "type": "string"
        },
        "MacCodePage": {
          "$ref": "#/$defs/integer"
        },
        "OEMCodePage": {
          "$ref": "#/$defs/integer"
        }
      },
      "readOnly": true
    },
    "string5": {
      "type": "string",
      "description": "Gets the name of the \u003Csee cref=\u0022T:EPiServer.Framework.Localization.LocalizationProvider\u0022 /\u003E.",
      "readOnly": true
    },
    "type2": {
      "type": "object",
      "properties": {
        "Assembly": {
          "$ref": "#/$defs/assembly"
        },
        "AssemblyQualifiedName": {
          "$ref": "#/$defs/string"
        },
        "Attributes": {
          "$ref": "#/$defs/typeAttributes"
        },
        "BaseType": {
          "$ref": "#/$defs/type"
        },
        "ContainsGenericParameters": {
          "$ref": "#/$defs/boolean"
        },
        "CustomAttributes": {
          "$ref": "#/$defs/arrayOfCustomAttributeData"
        },
        "DeclaringMethod": {
          "$ref": "#/$defs/methodBase"
        },
        "DeclaringType": {
          "$ref": "#/$defs/type"
        },
        "FullName": {
          "$ref": "#/$defs/string"
        },
        "GenericParameterAttributes": {
          "$ref": "#/$defs/genericParameterAttributes"
        },
        "GenericParameterPosition": {
          "$ref": "#/$defs/integer"
        },
        "GenericTypeArguments": {
          "$ref": "#/$defs/arrayOfType"
        },
        "GUID": {
          "$ref": "#/$defs/guid"
        },
        "HasElementType": {
          "$ref": "#/$defs/boolean"
        },
        "IsAbstract": {
          "$ref": "#/$defs/boolean"
        },
        "IsAnsiClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsAutoClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsAutoLayout": {
          "$ref": "#/$defs/boolean"
        },
        "IsByRef": {
          "$ref": "#/$defs/boolean"
        },
        "IsByRefLike": {
          "$ref": "#/$defs/boolean"
        },
        "IsClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsCollectible": {
          "$ref": "#/$defs/boolean"
        },
        "IsCOMObject": {
          "$ref": "#/$defs/boolean"
        },
        "IsConstructedGenericType": {
          "$ref": "#/$defs/boolean"
        },
        "IsContextful": {
          "$ref": "#/$defs/boolean"
        },
        "IsEnum": {
          "$ref": "#/$defs/boolean"
        },
        "IsExplicitLayout": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericMethodParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericType": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericTypeDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsGenericTypeParameter": {
          "$ref": "#/$defs/boolean"
        },
        "IsImport": {
          "$ref": "#/$defs/boolean"
        },
        "IsInterface": {
          "$ref": "#/$defs/boolean"
        },
        "IsLayoutSequential": {
          "$ref": "#/$defs/boolean"
        },
        "IsMarshalByRef": {
          "$ref": "#/$defs/boolean"
        },
        "IsNested": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedAssembly": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamANDAssem": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamily": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedFamORAssem": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedPrivate": {
          "$ref": "#/$defs/boolean"
        },
        "IsNestedPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsNotPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsPointer": {
          "$ref": "#/$defs/boolean"
        },
        "IsPrimitive": {
          "$ref": "#/$defs/boolean"
        },
        "IsPublic": {
          "$ref": "#/$defs/boolean"
        },
        "IsSealed": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecuritySafeCritical": {
          "$ref": "#/$defs/boolean"
        },
        "IsSecurityTransparent": {
          "$ref": "#/$defs/boolean"
        },
        "IsSerializable": {
          "$ref": "#/$defs/boolean"
        },
        "IsSignatureType": {
          "$ref": "#/$defs/boolean"
        },
        "IsSpecialName": {
          "$ref": "#/$defs/boolean"
        },
        "IsSZArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsTypeDefinition": {
          "$ref": "#/$defs/boolean"
        },
        "IsUnicodeClass": {
          "$ref": "#/$defs/boolean"
        },
        "IsValueType": {
          "$ref": "#/$defs/boolean"
        },
        "IsVariableBoundArray": {
          "$ref": "#/$defs/boolean"
        },
        "IsVisible": {
          "$ref": "#/$defs/boolean"
        },
        "MemberType": {
          "$ref": "#/$defs/memberTypes"
        },
        "MetadataToken": {
          "$ref": "#/$defs/integer"
        },
        "Module": {
          "$ref": "#/$defs/module"
        },
        "Name": {
          "$ref": "#/$defs/string"
        },
        "Namespace": {
          "$ref": "#/$defs/string"
        },
        "ReflectedType": {
          "$ref": "#/$defs/type"
        },
        "StructLayoutAttribute": {
          "$ref": "#/$defs/structLayoutAttribute"
        },
        "TypeHandle": {
          "$ref": "#/$defs/runtimeTypeHandle"
        },
        "TypeInitializer": {
          "$ref": "#/$defs/constructorInfo"
        },
        "UnderlyingSystemType": {
          "$ref": "#/$defs/type"
        }
      },
      "description": "Gets the type of the \u003Csee cref=\u0022T:EPiServer.Framework.Localization.LocalizationProvider\u0022 /\u003E."
    },
    "mappedRoleOptions": {
      "description": "Contains settings for mapped roles",
      "type": "object",
      "properties": {
        "MappedRoles": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A list of roles this role is mapped to.",
            "readOnly": true
          },
          "description": "A list of roles this role is mapped to.",
          "readOnly": true
        },
        "ShouldMatchAll": {
          "type": "boolean",
          "description": "Specifies if all mapped roles must match to be considered part of this role"
        }
      }
    },
    "string6": {
      "type": "string",
      "description": "Smtp network host"
    },
    "string7": {
      "type": "string",
      "description": "Smtp password"
    },
    "nullableOfInt32": {
      "type": "integer",
      "description": "Smtp network port"
    },
    "string8": {
      "type": "string",
      "description": "Smtp username. Leave empty to disable authentication"
    },
    "nullableOfBoolean": {
      "type": "boolean",
      "description": "Should email client use ssl"
    },
    "string9": {
      "type": "string",
      "description": "The path to place email files for pickup"
    },
    "jsonSerializerOptions": {
      "type": "object",
      "properties": {
        "AllowOutOfOrderMetadataProperties": {
          "type": "boolean"
        },
        "AllowTrailingCommas": {
          "type": "boolean"
        },
        "Converters": {
          "$ref": "#/$defs/iListOfJsonConverter"
        },
        "DefaultBufferSize": {
          "type": "integer"
        },
        "DefaultIgnoreCondition": {
          "enum": [
            "Never",
            "Always",
            "WhenWritingDefault",
            "WhenWritingNull"
          ]
        },
        "DictionaryKeyPolicy": {
          "type": "object"
        },
        "Encoder": {
          "$ref": "#/$defs/javaScriptEncoder"
        },
        "IgnoreNullValues": {
          "type": "boolean"
        },
        "IgnoreReadOnlyFields": {
          "type": "boolean"
        },
        "IgnoreReadOnlyProperties": {
          "type": "boolean"
        },
        "IncludeFields": {
          "type": "boolean"
        },
        "IndentCharacter": {
          "type": "object"
        },
        "IndentSize": {
          "type": "integer"
        },
        "IsReadOnly": {
          "$ref": "#/$defs/boolean"
        },
        "MaxDepth": {
          "type": "integer"
        },
        "NewLine": {
          "type": "string"
        },
        "NumberHandling": {
          "enum": [
            "Strict",
            "AllowReadingFromString",
            "WriteAsString",
            "AllowNamedFloatingPointLiterals"
          ]
        },
        "PreferredObjectCreationHandling": {
          "enum": [
            "Replace",
            "Populate"
          ]
        },
        "PropertyNameCaseInsensitive": {
          "type": "boolean"
        },
        "PropertyNamingPolicy": {
          "type": "object"
        },
        "ReadCommentHandling": {
          "enum": [
            "Disallow",
            "Skip",
            "Allow"
          ]
        },
        "ReferenceHandler": {
          "type": "object"
        },
        "RespectNullableAnnotations": {
          "type": "boolean"
        },
        "RespectRequiredConstructorParameters": {
          "type": "boolean"
        },
        "TypeInfoResolver": {
          "type": "object"
        },
        "TypeInfoResolverChain": {
          "$ref": "#/$defs/iListOfIJsonTypeInfoResolver"
        },
        "UnknownTypeHandling": {
          "enum": [
            "JsonElement",
            "JsonNode"
          ]
        },
        "UnmappedMemberHandling": {
          "enum": [
            "Skip",
            "Disallow"
          ]
        },
        "WriteIndented": {
          "type": "boolean"
        }
      },
      "readOnly": true
    },
    "iListOfJsonConverter": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/$defs/type"
          }
        },
        "readOnly": true
      },
      "readOnly": true
    },
    "javaScriptEncoder": {
      "type": "object",
      "properties": {
        "MaxOutputCharactersPerInputCharacter": {
          "$ref": "#/$defs/integer"
        }
      }
    },
    "iListOfIJsonTypeInfoResolver": {
      "type": "array",
      "items": {
        "type": "object",
        "readOnly": true
      },
      "readOnly": true
    },
    "virtualRoleBuilder": {
      "description": "A builder used to build virtual roles",
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Gets the name of the \u003Csee cref=\u0022T:EPiServer.Security.VirtualRoleProviderBase\u0022 /\u003E.",
          "readOnly": true
        },
        "RoleType": {
          "type": "object",
          "properties": {
            "Assembly": {
              "$ref": "#/$defs/assembly"
            },
            "AssemblyQualifiedName": {
              "$ref": "#/$defs/string"
            },
            "Attributes": {
              "$ref": "#/$defs/typeAttributes"
            },
            "BaseType": {
              "$ref": "#/$defs/type"
            },
            "ContainsGenericParameters": {
              "$ref": "#/$defs/boolean"
            },
            "CustomAttributes": {
              "$ref": "#/$defs/arrayOfCustomAttributeData"
            },
            "DeclaringMethod": {
              "$ref": "#/$defs/methodBase"
            },
            "DeclaringType": {
              "$ref": "#/$defs/type"
            },
            "FullName": {
              "$ref": "#/$defs/string"
            },
            "GenericParameterAttributes": {
              "$ref": "#/$defs/genericParameterAttributes"
            },
            "GenericParameterPosition": {
              "$ref": "#/$defs/integer"
            },
            "GenericTypeArguments": {
              "$ref": "#/$defs/arrayOfType"
            },
            "GUID": {
              "$ref": "#/$defs/guid"
            },
            "HasElementType": {
              "$ref": "#/$defs/boolean"
            },
            "IsAbstract": {
              "$ref": "#/$defs/boolean"
            },
            "IsAnsiClass": {
              "$ref": "#/$defs/boolean"
            },
            "IsArray": {
              "$ref": "#/$defs/boolean"
            },
            "IsAutoClass": {
              "$ref": "#/$defs/boolean"
            },
            "IsAutoLayout": {
              "$ref": "#/$defs/boolean"
            },
            "IsByRef": {
              "$ref": "#/$defs/boolean"
            },
            "IsByRefLike": {
              "$ref": "#/$defs/boolean"
            },
            "IsClass": {
              "$ref": "#/$defs/boolean"
            },
            "IsCollectible": {
              "$ref": "#/$defs/boolean"
            },
            "IsCOMObject": {
              "$ref": "#/$defs/boolean"
            },
            "IsConstructedGenericType": {
              "$ref": "#/$defs/boolean"
            },
            "IsContextful": {
              "$ref": "#/$defs/boolean"
            },
            "IsEnum": {
              "$ref": "#/$defs/boolean"
            },
            "IsExplicitLayout": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericMethodParameter": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericParameter": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericType": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericTypeDefinition": {
              "$ref": "#/$defs/boolean"
            },
            "IsGenericTypeParameter": {
              "$ref": "#/$defs/boolean"
            },
            "IsImport": {
              "$ref": "#/$defs/boolean"
            },
            "IsInterface": {
              "$ref": "#/$defs/boolean"
            },
            "IsLayoutSequential": {
              "$ref": "#/$defs/boolean"
            },
            "IsMarshalByRef": {
              "$ref": "#/$defs/boolean"
            },
            "IsNested": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedAssembly": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedFamANDAssem": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedFamily": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedFamORAssem": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedPrivate": {
              "$ref": "#/$defs/boolean"
            },
            "IsNestedPublic": {
              "$ref": "#/$defs/boolean"
            },
            "IsNotPublic": {
              "$ref": "#/$defs/boolean"
            },
            "IsPointer": {
              "$ref": "#/$defs/boolean"
            },
            "IsPrimitive": {
              "$ref": "#/$defs/boolean"
            },
            "IsPublic": {
              "$ref": "#/$defs/boolean"
            },
            "IsSealed": {
              "$ref": "#/$defs/boolean"
            },
            "IsSecurityCritical": {
              "$ref": "#/$defs/boolean"
            },
            "IsSecuritySafeCritical": {
              "$ref": "#/$defs/boolean"
            },
            "IsSecurityTransparent": {
              "$ref": "#/$defs/boolean"
            },
            "IsSerializable": {
              "$ref": "#/$defs/boolean"
            },
            "IsSignatureType": {
              "$ref": "#/$defs/boolean"
            },
            "IsSpecialName": {
              "$ref": "#/$defs/boolean"
            },
            "IsSZArray": {
              "$ref": "#/$defs/boolean"
            },
            "IsTypeDefinition": {
              "$ref": "#/$defs/boolean"
            },
            "IsUnicodeClass": {
              "$ref": "#/$defs/boolean"
            },
            "IsValueType": {
              "$ref": "#/$defs/boolean"
            },
            "IsVariableBoundArray": {
              "$ref": "#/$defs/boolean"
            },
            "IsVisible": {
              "$ref": "#/$defs/boolean"
            },
            "MemberType": {
              "$ref": "#/$defs/memberTypes"
            },
            "MetadataToken": {
              "$ref": "#/$defs/integer"
            },
            "Module": {
              "$ref": "#/$defs/module"
            },
            "Name": {
              "$ref": "#/$defs/string"
            },
            "Namespace": {
              "$ref": "#/$defs/string"
            },
            "ReflectedType": {
              "$ref": "#/$defs/type"
            },
            "StructLayoutAttribute": {
              "$ref": "#/$defs/structLayoutAttribute"
            },
            "TypeHandle": {
              "$ref": "#/$defs/runtimeTypeHandle"
            },
            "TypeInitializer": {
              "$ref": "#/$defs/constructorInfo"
            },
            "UnderlyingSystemType": {
              "$ref": "#/$defs/type"
            }
          },
          "description": "Gets the type of the \u003Csee cref=\u0022T:EPiServer.Security.VirtualRoleProviderBase\u0022 /\u003E."
        }
      }
    },
    "iListOfModuleDetails": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "Assemblies": {
            "$ref": "#/$defs/iListOfString1"
          },
          "ClientResourcePath": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "ResourcePath": {
            "type": "string"
          }
        },
        "readOnly": true
      },
      "readOnly": true
    },
    "listOfString": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "iListOfViewTransformationDetails": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "DefinitionName": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "PlugInArea": {
            "type": "string"
          },
          "TransformationType": {
            "enum": [
              "None",
              "Add",
              "Remove"
            ]
          }
        },
        "readOnly": true
      },
      "readOnly": true
    }
  }
}